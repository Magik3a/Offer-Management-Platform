{"version":3,"file":"serenity-grids.js","sourceRoot":"","sources":["../../CoreLib/UI/DataGrid/SlickPager.ts","../../CoreLib/UI/Helpers/SlickHelpers.ts","../../CoreLib/UI/Formatters/Formatters.ts","../../CoreLib/UI/DataGrid/DataGrid.ts","../../CoreLib/UI/DataGrid/ColumnPickerDialog.ts","../../CoreLib/UI/DataGrid/EntityGrid.ts","../../CoreLib/UI/DataGrid/TreeGridMixin.ts","../../CoreLib/UI/Editors/CheckTreeEditor.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nnamespace Serenity {\r\n\r\n    export class SlickPager extends Widget<Slick.PagerOptions> {\r\n\r\n        constructor(div: JQuery, o: Slick.PagerOptions) {\r\n            super(div, Q.extend({\r\n                showRowsPerPage: true,\r\n                rowsPerPageOptions: [20, 100, 500, 2000]\r\n            } as any, o));\r\n\r\n            o = this.options;\r\n            var v = o.view;\r\n\r\n            if (!v)\r\n                throw \"SlickPager requires view option to be set!\";\r\n\r\n            this.element.addClass('s-SlickPager slick-pg')\r\n                .html(\r\n                    '<div class=\"slick-pg-in\">' + \r\n                        '<div class=\"slick-pg-grp\">' +\r\n                            '<div class=\"slick-pg-first slick-pg-btn\"><span class=\"slick-pg-btn-span\"></span></div>' + \r\n                            '<div class=\"slick-pg-prev slick-pg-btn\"><span class=\"slick-pg-btn-span\"></span></div>' + \r\n                        '</div><div class=\"slick-pg-sep\"></div><div class=\"slick-pg-grp\">' + \r\n                            '<span class=\"slick-pg-control\">&nbsp;' + Q.text(\"Controls.Pager.Page\") +\r\n                            '&nbsp;<input class=\"slick-pg-current\" type=\"text\" size=\"4\" value=\"1\" /> / ' +\r\n                            '<span class=\"slick-pg-total\"> 1 </span></span>' + \r\n                        '</div><div class=\"slick-pg-sep\"></div><div class=\"slick-pg-grp\">' + \r\n                            '<div class=\"slick-pg-next slick-pg-btn\"><span class=\"slick-pg-btn-span\"></span></div>' + \r\n                            '<div class=\"slick-pg-last slick-pg-btn\"><span class=\"slick-pg-btn-span\"></span></div>' + \r\n                        '</div><div class=\"slick-pg-sep\"></div><div class=\"slick-pg-grp\">' + \r\n                            '<div class=\"slick-pg-reload slick-pg-btn\"><span class=\"slick-pg-btn-span\"></span></div>' + \r\n                        '</div><div class=\"slick-pg-sep\"></div>' + \r\n                        '<div class=\"slick-pg-grp\"><span class=\"slick-pg-stat\"></span></div></div>');\r\n\r\n            var self = this;\r\n            $('.slick-pg-reload', this.element).click(function () { v.populate() });\r\n            $('.slick-pg-first', this.element).click(function () { self._changePage('first') });\r\n            $('.slick-pg-prev', this.element).click(function () { self._changePage('prev') });\r\n            $('.slick-pg-next', this.element).click(function () { self._changePage('next') });\r\n            $('.slick-pg-last', this.element).click(function () { self._changePage('last') });\r\n            $('.slick-pg-current', this.element).keydown(function (e) { if (e.keyCode == 13) self._changePage('input') });\r\n\r\n            if (self.options.showRowsPerPage) {\r\n                var opt: string, sel = \"\";\r\n                for (var nx = 0; nx < o.rowsPerPageOptions.length; nx++) {\r\n                    if (v.rowsPerPage == o.rowsPerPageOptions[nx]) \r\n                        sel = 'selected=\"selected\"'; else sel = '';\r\n                    opt += \"<option value='\" + o.rowsPerPageOptions[nx] + \"' \" + sel + \" >\" + o.rowsPerPageOptions[nx] + \"&nbsp;&nbsp;</option>\";\r\n                };\r\n                $('.slick-pg-in', this.element).prepend('<div class=\"slick-pg-grp\"><select class=\"slick-pg-size\" name=\"rp\">' + opt + '</select></div><div class=\"slick-pg-sep\"></div>');\r\n                $('select.slick-pg-size', this.element).change(\r\n                    function (this: HTMLSelectElement) {\r\n                        if (o.onRowsPerPageChange)\r\n                            o.onRowsPerPageChange(+this.value);\r\n                        else {\r\n                            v[\"newp\"] = 1;\r\n                            v.setPagingOptions({\r\n                                page: 1,\r\n                                rowsPerPage: +this.value \r\n                            });\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            v.onPagingInfoChanged.subscribe(function() {\r\n                self._updatePager();\r\n            });\r\n        }\r\n    \r\n        _changePage(ctype: string) { //change page\r\n\r\n            var view = this.options.view;\r\n\r\n            if (!view || view.loading)\r\n                return true;\r\n\r\n            var info = view.getPagingInfo();\r\n            var pages = (!info.rowsPerPage || !info.totalCount) ? 1 : Math.ceil(info.totalCount / info.rowsPerPage);\r\n\r\n            var newp: number;\r\n\r\n            switch (ctype) {\r\n                case 'first': newp = 1; break;\r\n                case 'prev': if (info.page > 1) newp = parseInt(info.page as any) - 1; break;\r\n                case 'next': if (info.page < pages) newp = parseInt(info.page as any) + 1; break;\r\n                case 'last': newp = pages; break;\r\n                case 'input':\r\n                    var nv = parseInt($('input.slick-pg-current', this.element).val());\r\n                    if (isNaN(nv)) \r\n                        nv = 1;\r\n                    else if (nv < 1) \r\n                        nv = 1;\r\n                    else if (nv > pages) \r\n                        nv = pages;\r\n\r\n                    $('.slick-pg-current', this.element).val(nv);\r\n\r\n                    newp = nv;\r\n                    break;\r\n            }\r\n\r\n            if (newp == info.page)\r\n                return false;\r\n\r\n            if (this.options.onChangePage)\r\n                this.options.onChangePage(newp);\r\n            else {\r\n                view.setPagingOptions({ page: newp });\r\n            }\r\n        }\r\n\r\n        _updatePager() { \r\n\r\n            var view = this.options.view;\r\n            var info = view.getPagingInfo();\r\n            var pages = (!info.rowsPerPage || !info.totalCount) ? 1 : Math.ceil(info.totalCount / info.rowsPerPage);\r\n\r\n            $('.slick-pg-current', this.element).val(info.page);\r\n            $('.slick-pg-total', this.element).html(pages as any);\r\n\r\n            var r1 = (info.page - 1) * info.rowsPerPage + 1;\r\n            var r2 = r1 + info.rowsPerPage - 1;\r\n\r\n            if (info.totalCount < r2) \r\n                r2 = info.totalCount;\r\n\r\n            var stat: string;\r\n\r\n            if (info.loading) {\r\n                stat = Q.text(\"Controls.Pager.LoadingStatus\");\r\n            }\r\n            else if (info.error) {\r\n                stat = info.error;\r\n            }\r\n            else if (info.totalCount > 0) {\r\n                stat = Q.text(\"Controls.Pager.PageStatus\");\r\n                stat = stat.replace(/{from}/, <any>r1);\r\n                stat = stat.replace(/{to}/, <any>r2);\r\n                stat = stat.replace(/{total}/, <any>info.totalCount);\r\n            }\r\n            else\r\n                stat = Q.text(\"Controls.Pager.NoRowStatus\");\r\n\r\n            $('.slick-pg-stat', this.element).html(stat);\r\n            $('.slick-pg-size', this.element).val((info.rowsPerPage || 0).toString());\r\n        }\r\n    }\r\n}\r\n\r\ndeclare namespace Slick {\r\n    interface PagerOptions {\r\n        view?: Slick.RemoteView<any>;\r\n        showRowsPerPage?: boolean;\r\n        rowsPerPage?: number;\r\n        rowsPerPageOptions?: number[],\r\n        onChangePage?: (newPage: number) => void;\r\n        onRowsPerPageChange?: (n: number) => void;\r\n    }\r\n}","namespace Serenity {\r\n\r\n    \r\n\r\n    export interface GridRowSelectionMixinOptions {\r\n        selectable?: (item: any) => boolean;\r\n    }\r\n\r\n    @Decorators.registerClass('Serenity.GridRowSelectionMixin')\r\n    export class GridRowSelectionMixin {\r\n\r\n        private idField: string;\r\n        private include: Q.Dictionary<boolean>;\r\n        private grid: IDataGrid;\r\n        private options: GridRowSelectionMixinOptions;\r\n\r\n        constructor(grid: IDataGrid, options?: GridRowSelectionMixinOptions) {\r\n\r\n            this.include = {};\r\n            this.grid = grid;\r\n            this.idField = (grid.getView() as any).idField;\r\n            this.options = options || {};\r\n\r\n            grid.getGrid().onClick.subscribe((e, p) => {\r\n                if ($(e.target).hasClass('select-item')) {\r\n                    e.preventDefault();\r\n                    var item = grid.getView().getItem(p.row);\r\n                    var id = item[this.idField].toString();\r\n\r\n                    if (this.include[id]) {\r\n                        delete this.include[id];\r\n                    }\r\n                    else {\r\n                        this.include[id] = true;\r\n                    }\r\n\r\n                    for (var i = 0; i < (grid.getView() as any).getLength(); i++) {\r\n                        grid.getGrid().updateRow(i);\r\n                    }\r\n\r\n                    this.updateSelectAll();\r\n                }\r\n            });\r\n\r\n            grid.getGrid().onHeaderClick.subscribe((e1, u) => {\r\n                if (e1.isDefaultPrevented()) {\r\n                    return;\r\n                }\r\n                if ($(e1.target).hasClass('select-all-items')) {\r\n                    e1.preventDefault();\r\n                    var view = grid.getView();\r\n                    if (Object.keys(this.include).length > 0) {\r\n                        Q.clearKeys(this.include);\r\n                    }\r\n                    else {\r\n                        var items = grid.getView().getItems();\r\n                        for (var x of items.filter(this.isSelectable.bind(this))) {\r\n                            var id1 = x[this.idField];\r\n                            this.include[id1] = true;\r\n                        }\r\n                    }\r\n                    this.updateSelectAll();\r\n                    grid.getView().setItems(grid.getView().getItems(), true);\r\n                }\r\n            });\r\n\r\n            (grid.getView() as any).onRowsChanged.subscribe(() => {\r\n                return this.updateSelectAll();\r\n            });\r\n        }\r\n\r\n        updateSelectAll(): void {\r\n            var selectAllButton = this.grid.getElement()\r\n                .find('.select-all-header .slick-column-name .select-all-items');\r\n\r\n            if (selectAllButton) {\r\n                var keys = Object.keys(this.include);\r\n                selectAllButton.toggleClass('checked',\r\n                    keys.length > 0 &&\r\n                    this.grid.getView().getItems().filter(\r\n                        this.isSelectable.bind(this)).length <= keys.length);\r\n            }\r\n        }\r\n\r\n        clear(): void {\r\n            Q.clearKeys(this.include);\r\n            this.updateSelectAll();\r\n        }\r\n\r\n        resetCheckedAndRefresh(): void {\r\n            this.include = {};\r\n            this.updateSelectAll();\r\n            this.grid.getView().populate();\r\n        }\r\n\r\n        selectKeys(keys: string[]): void {\r\n            for (var k of keys) {\r\n                this.include[k] = true;\r\n            }\r\n\r\n            this.updateSelectAll();\r\n        }\r\n\r\n        getSelectedKeys(): string[] {\r\n            return Object.keys(this.include);\r\n        }\r\n\r\n        getSelectedAsInt32(): number[] {\r\n            return Object.keys(this.include).map(function (x) {\r\n                return parseInt(x, 10);\r\n            });\r\n        }\r\n\r\n        getSelectedAsInt64(): number[] {\r\n            return Object.keys(this.include).map(function (x) {\r\n                return parseInt(x, 10);\r\n            });\r\n        }\r\n\r\n        setSelectedKeys(keys: string[]): void {\r\n            this.clear();\r\n            for (var k of keys) {\r\n                this.include[k] = true;\r\n            }\r\n\r\n            this.updateSelectAll();\r\n        }\r\n\r\n        private isSelectable(item: any) {\r\n            return item && (\r\n                this.options.selectable == null ||\r\n                this.options.selectable(item));\r\n        }\r\n\r\n        static createSelectColumn(getMixin: () => GridRowSelectionMixin): Slick.Column {\r\n            return {\r\n                name: '<span class=\"select-all-items check-box no-float \"></span>',\r\n                toolTip: ' ',\r\n                field: '__select__',\r\n                width: 27,\r\n                minWidth: 27,\r\n                headerCssClass: 'select-all-header',\r\n                sortable: false,\r\n                format: function (ctx) {\r\n                    var item = ctx.item;\r\n                    var mixin = getMixin();\r\n                    if (!mixin || !mixin.isSelectable(item)) {\r\n                        return '';\r\n                    }\r\n                    var isChecked = mixin.include[ctx.item[mixin.idField]];\r\n                    return '<span class=\"select-item check-box no-float ' + (isChecked ? ' checked' : '') + '\"></span>';\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    export interface GridRadioSelectionMixinOptions {\r\n        selectable?: (item: any) => boolean;\r\n    }\r\n\r\n    @Serenity.Decorators.registerClass('Serenity.GridRadioSelectionMixin')\r\n    export class GridRadioSelectionMixin {\r\n\r\n        private idField: string;\r\n        private include: Q.Dictionary<boolean>;\r\n        private grid: Serenity.IDataGrid;\r\n        private options: GridRadioSelectionMixinOptions;\r\n\r\n        constructor(grid: Serenity.IDataGrid, options?: GridRadioSelectionMixinOptions) {\r\n\r\n            this.include = {};\r\n            this.grid = grid;\r\n            this.idField = (grid.getView() as any).idField;\r\n            this.options = options || {};\r\n\r\n            grid.getGrid().onClick.subscribe((e, p) => {\r\n                if ($(e.target).hasClass('rad-select-item')) {\r\n                    e.preventDefault();\r\n                    var item = grid.getView().getItem(p.row);\r\n\r\n                    if (!this.isSelectable(item)) {\r\n                        return;\r\n                    }\r\n\r\n                    var id = item[this.idField].toString();\r\n\r\n                    if (this.include[id] == true) {\r\n                        Q.clearKeys(this.include);\r\n                    }\r\n                    else {\r\n                        Q.clearKeys(this.include);\r\n                        this.include[id] = true;\r\n                    }\r\n\r\n                    for (var i = 0; i < (grid.getView() as any).getLength(); i++) {\r\n                        grid.getGrid().updateRow(i);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        private isSelectable(item: any) {\r\n            return item && (\r\n                this.options.selectable == null ||\r\n                this.options.selectable(item));\r\n        }\r\n\r\n        clear(): void {\r\n            Q.clearKeys(this.include);\r\n        }\r\n\r\n        resetCheckedAndRefresh(): void {\r\n            this.include = {};\r\n            this.grid.getView().populate();\r\n        }\r\n\r\n        getSelectedKey(): string {\r\n            var items = Object.keys(this.include);\r\n            if (items != null && items.length > 0) {\r\n                return items[0];\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        getSelectedAsInt32(): number {\r\n            var items = Object.keys(this.include).map(function (x) {\r\n                return parseInt(x, 10);\r\n            });\r\n\r\n            if (items != null && items.length > 0) {\r\n                return items[0];\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        getSelectedAsInt64(): number {\r\n            var items = Object.keys(this.include).map(function (x) {\r\n                return parseInt(x, 10);\r\n            });\r\n\r\n            if (items != null && items.length > 0) {\r\n                return items[0];\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        setSelectedKey(key: string): void {\r\n            this.clear();\r\n            this.include[key] = true;\r\n        }\r\n\r\n        static createSelectColumn(getMixin: () => Serenity.GridRadioSelectionMixin): Slick.Column {\r\n            return {\r\n                name: '',\r\n                toolTip: ' ',\r\n                field: '__select__',\r\n                width: 27,\r\n                minWidth: 27,\r\n                headerCssClass: '',\r\n                sortable: false,\r\n                formatter: function (row, cell, value, column, item) {\r\n                    var mixin = getMixin();\r\n                    if (!mixin || !mixin.isSelectable(item)) {\r\n                        return '';\r\n                    }\r\n\r\n                    var isChecked = mixin.include[item[mixin.idField]];\r\n                    return '<input type=\"radio\" name=\"radio-selection-group\" class=\"rad-select-item no-float\" style=\"cursor: pointer;width: 13px; height:13px;\" ' + (isChecked ? ' checked' : '') + ' /> ';\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    export namespace GridSelectAllButtonHelper {\r\n        export function update(grid: IDataGrid, getSelected: (p1: any) => boolean): void {\r\n            var toolbar = (grid as any).element.children('.s-Toolbar') as JQuery;\r\n            if (toolbar.length === 0) {\r\n                return;\r\n            }\r\n            var btn = toolbar.getWidget(Toolbar).findButton('select-all-button');\r\n            var items = grid.getView().getItems();\r\n            btn.toggleClass('checked', items.length > 0 && !items.some(function (x) {\r\n                return !getSelected(x);\r\n            }));\r\n        }\r\n\r\n        export function define(getGrid: () => IDataGrid, getId: (p1: any) => any,\r\n            getSelected: (p1: any) => boolean,\r\n            setSelected: (p1: any, p2: boolean) => void,\r\n            text?: string, onClick?: () => void): ToolButton {\r\n\r\n            if (text == null) {\r\n                text = Q.coalesce(Q.tryGetText('Controls.CheckTreeEditor.SelectAll'),\r\n                    'Select All');\r\n            }\r\n            return {\r\n                title: text,\r\n                cssClass: 'select-all-button',\r\n                onClick: function () {\r\n                    var grid = getGrid();\r\n                    var view = grid.getView();\r\n                    var btn = (grid as any).element.children('.s-Toolbar')\r\n                        .getWidget(Toolbar).findButton('select-all-button');\r\n                    var makeSelected = !btn.hasClass('checked');\r\n                    view.beginUpdate();\r\n                    try {\r\n                        for (var item of view.getItems()) {\r\n                            setSelected(item, makeSelected);\r\n                            view.updateItem(getId(item), item);\r\n                        }\r\n                        onClick && onClick();\r\n                    }\r\n                    finally {\r\n                        view.endUpdate();\r\n                    }\r\n\r\n                    btn.toggleClass('checked', makeSelected);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    export namespace GridUtils {\r\n        export function addToggleButton(toolDiv: JQuery, cssClass: string,\r\n            callback: (p1: boolean) => void, hint: string, initial?: boolean): void {\r\n\r\n            var div = $('<div><a href=\"#\"></a></div>')\r\n                .addClass('s-ToggleButton').addClass(cssClass)\r\n                .prependTo(toolDiv);\r\n            div.children('a').click(function (e) {\r\n                e.preventDefault();\r\n                div.toggleClass('pressed');\r\n                var pressed = div.hasClass('pressed');\r\n                callback && callback(pressed);\r\n            }).attr('title', Q.coalesce(hint, ''));\r\n            if (initial) {\r\n                div.addClass('pressed');\r\n            }\r\n        }\r\n\r\n        export function addIncludeDeletedToggle(toolDiv: JQuery,\r\n            view: Slick.RemoteView<any>, hint?: string, initial?: boolean): void {\r\n\r\n            var includeDeleted = false;\r\n            var oldSubmit = view.onSubmit;\r\n            view.onSubmit = function (v) {\r\n                v.params.IncludeDeleted = includeDeleted;\r\n                if (oldSubmit != null) {\r\n                    return oldSubmit(v);\r\n                }\r\n                return true;\r\n            };\r\n\r\n            if (hint == null) \r\n                hint = Q.text('Controls.EntityGrid.IncludeDeletedToggle');\r\n            \r\n            addToggleButton(toolDiv, 's-IncludeDeletedToggle',\r\n                function (pressed) {\r\n                    includeDeleted = pressed;\r\n                    view.seekToPage = 1;\r\n                    view.populate();\r\n                }, hint, initial);\r\n            toolDiv.bind('remove', function () {\r\n                view.onSubmit = null;\r\n                oldSubmit = null;\r\n            });\r\n        }\r\n\r\n        export function addQuickSearchInput(toolDiv: JQuery,\r\n            view: Slick.RemoteView<any>, fields?: QuickSearchField[]): void {\r\n\r\n            var oldSubmit = view.onSubmit;\r\n            var searchText = '';\r\n            var searchField = '';\r\n            view.onSubmit = function (v) {\r\n                if (searchText != null && searchText.length > 0) {\r\n                    v.params.ContainsText = searchText;\r\n                }\r\n                else {\r\n                    delete v.params['ContainsText'];\r\n                }\r\n                if (searchField != null && searchField.length > 0) {\r\n                    v.params.ContainsField = searchField;\r\n                }\r\n                else {\r\n                    delete v.params['ContainsField'];\r\n                }\r\n\r\n                if (oldSubmit != null) \r\n                    return oldSubmit(v);\r\n                \r\n                return true;\r\n            };\r\n\r\n            var lastDoneEvent: any = null;\r\n            addQuickSearchInputCustom(toolDiv, (field, query, done) => {\r\n                searchText = query;\r\n                searchField = field;\r\n                view.seekToPage = 1;\r\n                lastDoneEvent = done;\r\n                view.populate();\r\n            }, fields);\r\n\r\n            view.onDataLoaded.subscribe(function (e, ui) {\r\n                if (lastDoneEvent != null) {\r\n                    lastDoneEvent(view.getLength() > 0);\r\n                    lastDoneEvent = null;\r\n                }\r\n            });\r\n        }\r\n\r\n        export function addQuickSearchInputCustom(container: JQuery,\r\n            onSearch: (p1: string, p2: string, done: (p3: boolean) => void) => void,\r\n            fields?: QuickSearchField[]) {\r\n\r\n            var div = $('<div><input type=\"text\"/></div>')\r\n                .addClass('s-QuickSearchBar').prependTo(container);\r\n\r\n            if (fields != null && fields.length > 0) {\r\n                div.addClass('has-quick-search-fields');\r\n            }\r\n\r\n            new QuickSearchInput(div.children(), {\r\n                fields: fields,\r\n                onSearch: onSearch as any\r\n            });\r\n        }\r\n\r\n        export function makeOrderable(grid: Slick.Grid,\r\n            handleMove: (p1: any, p2: number) => void): void {\r\n\r\n            var moveRowsPlugin = new Slick.RowMoveManager({ cancelEditOnDrag: true });\r\n            moveRowsPlugin.onBeforeMoveRows.subscribe(function (e, data) {\r\n                for (var i = 0; !!(i < data.rows.length); i++) {\r\n                    if (!!(data.rows[i] === data.insertBefore ||\r\n                        data.rows[i] === data.insertBefore - 1)) {\r\n                        e.stopPropagation();\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            });\r\n\r\n            moveRowsPlugin.onMoveRows.subscribe(function (e1, data1) {\r\n                handleMove(data1.rows, data1.insertBefore);\r\n                try {\r\n                    grid.setSelectedRows([]);\r\n                }\r\n                catch ($t1) {\r\n                }\r\n            });\r\n            grid.registerPlugin(moveRowsPlugin);\r\n        }\r\n\r\n        export function makeOrderableWithUpdateRequest(grid: DataGrid<any, any>,\r\n            getId: (p1: any) => number, getDisplayOrder: (p1: any) => any, service: string,\r\n            getUpdateRequest: (p1: number, p2: number) => SaveRequest<any>): void {\r\n\r\n            makeOrderable(grid.slickGrid, function (rows, insertBefore) {\r\n                if (rows.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                var order: number;\r\n                var index = insertBefore;\r\n                if (index < 0) {\r\n                    order = 1;\r\n                }\r\n                else if (insertBefore >= grid.rowCount()) {\r\n                    order = Q.coalesce(getDisplayOrder(\r\n                        grid.itemAt(grid.rowCount() - 1)), 0);\r\n                    if (order === 0) {\r\n                        order = insertBefore + 1;\r\n                    }\r\n                    else {\r\n                        order = order + 1;\r\n                    }\r\n                }\r\n                else {\r\n                    order = Q.coalesce(getDisplayOrder(\r\n                        grid.itemAt(insertBefore)), 0);\r\n                    if (order === 0) {\r\n                        order = insertBefore + 1;\r\n                    }\r\n                }\r\n\r\n                var i = 0;\r\n                var next: any = null;\r\n                next = function () {\r\n                    Q.serviceCall({\r\n                        service: service,\r\n                        request: getUpdateRequest(getId(\r\n                            grid.itemAt(rows[i])), order++),\r\n                        onSuccess: function (response) {\r\n                            i++;\r\n                            if (i < rows.length) {\r\n                                next();\r\n                            }\r\n                            else {\r\n                                grid.view.populate();\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                next();\r\n            });\r\n        }\r\n    }\r\n\r\n    export namespace PropertyItemSlickConverter {\r\n        export function toSlickColumns(items: PropertyItem[]): Slick.Column[] {\r\n            var result: Slick.Column[] = [];\r\n            if (items == null) {\r\n                return result;\r\n            }\r\n            for (var i = 0; i < items.length; i++) {\r\n                result.push(toSlickColumn(items[i]));\r\n            }\r\n            return result;\r\n        }\r\n\r\n        export function toSlickColumn(item: PropertyItem): Slick.Column {\r\n            var result: Slick.Column = {\r\n                field: item.name,\r\n                sourceItem: item,\r\n                cssClass: item.cssClass,\r\n                headerCssClass: item.headerCssClass,\r\n                sortable: item.sortable !== false,\r\n                sortOrder: Q.coalesce(item.sortOrder, 0),\r\n                width: item.width != null ? item.width : 80,\r\n                minWidth: Q.coalesce(item.minWidth, 30),\r\n                maxWidth: (item.maxWidth == null || item.maxWidth === 0) ? null : item.maxWidth,\r\n                resizable: item.resizable == null || !!item.resizable\r\n            };\r\n\r\n            result.visible = item.visible !== false && item.filterOnly !== true &&\r\n                (item.readPermission == null || Q.Authorization.hasPermission(item.readPermission));\r\n\r\n            var name = Q.tryGetText(item.title);\r\n            if (name == null)\r\n                name = item.title;\r\n            result.name = name;\r\n\r\n            if (item.alignment != null && item.alignment.length > 0) {\r\n                if (!Q.isEmptyOrNull(result.cssClass)) {\r\n                    result.cssClass += ' align-' + item.alignment;\r\n                }\r\n                else {\r\n                    result.cssClass = 'align-' + item.alignment;\r\n                }\r\n            }\r\n\r\n            if (item.formatterType != null && item.formatterType.length > 0) {\r\n\r\n                var formatterType = FormatterTypeRegistry.get(item.formatterType) as any;\r\n                var formatter = new formatterType() as Slick.Formatter;\r\n\r\n                if (item.formatterParams != null) {\r\n                    ReflectionOptionsSetter.set(formatter, item.formatterParams);\r\n                }\r\n\r\n                var initializer = Q.safeCast(formatter, Serenity.IInitializeColumn);\r\n                if (initializer != null) {\r\n                    initializer.initializeColumn(result);\r\n                }\r\n\r\n                result.format = (ctx) => formatter.format(ctx);\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    export namespace SlickFormatting {\r\n        export function getEnumText(enumKey: string, name: string): string {\r\n            return Serenity.EnumFormatter.getText(enumKey, name);\r\n        }\r\n\r\n        export function treeToggle<TItem>(getView: () => Slick.RemoteView<TItem>, getId: (x: TItem) => any,\r\n            formatter: Slick.Format): Slick.Format {\r\n            return function (ctx: Slick.FormatterContext) {\r\n                var text = formatter(ctx);\r\n                var view = getView();\r\n                var indent = Q.coalesce(ctx.item._indent, 0);\r\n                var spacer = '<span class=\"s-TreeIndent\" style=\"width:' + 15 * indent + 'px\"></span>';\r\n                var id = getId(ctx.item);\r\n                var idx = view.getIdxById(id);\r\n                var next = view.getItemByIdx(idx + 1);\r\n                if (next != null) {\r\n                    var nextIndent = Q.coalesce(next._indent, 0);\r\n                    if (nextIndent > indent) {\r\n                        if (!!!!ctx.item._collapsed) {\r\n                            return spacer + '<span class=\"s-TreeToggle s-TreeExpand\"></span>' + text;\r\n                        }\r\n                        else {\r\n                            return spacer + '<span class=\"s-TreeToggle s-TreeCollapse\"></span>' + text;\r\n                        }\r\n                    }\r\n                }\r\n                return spacer + '<span class=\"s-TreeToggle\"></span>' + text;\r\n            };\r\n        }\r\n\r\n        export function date(format?: string): Slick.Format {\r\n            if (format == null) {\r\n                format = Q.Culture.dateFormat;\r\n            }\r\n\r\n            return function (ctx: Slick.FormatterContext) {\r\n                return Q.htmlEncode(Serenity.DateFormatter.format(ctx.value, format));\r\n            };\r\n        }\r\n\r\n        export function dateTime(format?: string): Slick.Format {\r\n            if (format == null) {\r\n                format = Q.Culture.dateTimeFormat;\r\n            }\r\n            return function (ctx: Slick.FormatterContext) {\r\n                return Q.htmlEncode(Serenity.DateFormatter.format(ctx.value, format));\r\n            };\r\n        }\r\n\r\n        export function checkBox(): Slick.Format {\r\n            return function (ctx: Slick.FormatterContext) {\r\n                return '<span class=\"check-box no-float ' + (!!ctx.value ? ' checked' : '') + '\"></span>';\r\n            };\r\n        }\r\n\r\n        export function number(format: string): Slick.Format {\r\n            return function (ctx: Slick.FormatterContext) {\r\n                return Serenity.NumberFormatter.format(ctx.value, format);\r\n            };\r\n        }\r\n\r\n        export function getItemType(link: JQuery): string {\r\n            return link.data('item-type');\r\n        }\r\n\r\n        export function getItemId(link: JQuery): string {\r\n            var value = link.data('item-id');\r\n            return value == null ? null : value.toString();\r\n        }\r\n\r\n        export function itemLinkText(itemType: string, id: any, text: any,\r\n            extraClass: string, encode: boolean): string {\r\n            return '<a' + (id != null ? (' href=\"#' + Q.replaceAll(itemType, '.', '-') +\r\n                '/' + id + '\"') : '') + ' data-item-type=\"' +\r\n                Q.attrEncode(itemType) + '\"' + ' data-item-id=\"' +\r\n                Q.attrEncode(id) + '\"' + ' class=\"s-EditLink s-' +\r\n                Q.replaceAll(itemType, '.', '-') + 'Link' +\r\n                (Q.isEmptyOrNull(extraClass) ? '' : (' ' + extraClass)) + '\">' +\r\n                (encode ? Q.htmlEncode(Q.coalesce(text, '')) : Q.coalesce(text, '')) + '</a>';\r\n        }\r\n\r\n        export function itemLink(itemType: string, idField: string, getText: Slick.Format,\r\n            cssClass?: Slick.Format, encode?: boolean): Slick.Format {\r\n            return function (ctx: Slick.FormatterContext) {\r\n                return itemLinkText(itemType, ctx.item[idField],\r\n                    (getText == null ? ctx.value : getText(ctx)),\r\n                    (cssClass == null ? '' : cssClass(ctx)), encode);\r\n            };\r\n        }\r\n    }\r\n\r\n    export namespace SlickHelper {\r\n        export function setDefaults(columns: Slick.Column[], localTextPrefix?: string): any {\r\n            for (var col of columns) {\r\n                col.sortable = (col.sortable != null ? col.sortable : true);\r\n                var id = col.id;\r\n                if (id == null) {\r\n                    id = col.field;\r\n                }\r\n                col.id = id;\r\n\r\n                if (localTextPrefix != null && col.id != null &&\r\n                    (col.name == null || Q.startsWith(col.name, '~'))) {\r\n                    var key = (col.name != null ? col.name.substr(1) : col.id);\r\n                    col.name = Q.text(localTextPrefix + key);\r\n                }\r\n\r\n                if (col.formatter == null && col.format != null) {\r\n                    col.formatter = convertToFormatter(col.format);\r\n                }\r\n                else if (col.formatter == null) {\r\n                    col.formatter = function (row, cell, value, column, item) {\r\n                        return Q.htmlEncode(value);\r\n                    };\r\n                }\r\n            }\r\n\r\n            return columns;\r\n        }\r\n\r\n        export function convertToFormatter(format: Slick.Format): Slick.ColumnFormatter {\r\n            if (format == null) {\r\n                return null;\r\n            }\r\n            else {\r\n                return function (row: number, cell: number, value: any, column: Slick.Column, item: any) {\r\n                    return format({\r\n                        row: row,\r\n                        cell: cell,\r\n                        value: value,\r\n                        column: column,\r\n                        item: item\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export namespace SlickTreeHelper {\r\n        export function filterCustom<TItem>(item: TItem, getParent: (x: TItem) => any): boolean {\r\n            var parent = getParent(item);\r\n            var loop = 0;\r\n            while (parent != null) {\r\n                if (!!parent._collapsed) {\r\n                    return false;\r\n                }\r\n                parent = getParent(parent);\r\n                if (loop++ > 1000) {\r\n                    throw new Error(\r\n                        'Possible infinite loop, check parents has no circular reference!');\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        export function filterById<TItem>(item: TItem, view: Slick.RemoteView<TItem>,\r\n            getParentId: (x: TItem) => any): boolean {\r\n            return filterCustom(item, function (x) {\r\n                var parentId = getParentId(x);\r\n                if (parentId == null) {\r\n                    return null;\r\n                }\r\n                return view.getItemById(parentId);\r\n            });\r\n        }\r\n\r\n        export function setCollapsed<TItem>(items: TItem[], collapsed: boolean): void {\r\n            if (items != null) {\r\n                for (var item of items) {\r\n                    (item as any)._collapsed = collapsed;\r\n                }\r\n            }\r\n        }\r\n\r\n        export function setCollapsedFlag<TItem>(item: TItem, collapsed: boolean): void {\r\n            (item as any)._collapsed = collapsed;\r\n        }\r\n\r\n        export function setIndents<TItem>(items: TItem[], getId: (x: TItem) => any,\r\n            getParentId: (x: TItem) => any, setCollapsed?: boolean): void {\r\n            var depth = 0;\r\n            var depths = {};\r\n            for (var line = 0; line < items.length; line++) {\r\n                var item = items[line];\r\n                if (line > 0) {\r\n                    var parentId = getParentId(item);\r\n                    if (parentId != null && parentId === getId(items[line - 1])) {\r\n                        depth += 1;\r\n                    }\r\n                    else if (parentId == null) {\r\n                        depth = 0;\r\n                    }\r\n                    else if (parentId !== getParentId(items[line - 1])) {\r\n                        if (depths[parentId] != null) {\r\n                            depth = depths[parentId] + 1;\r\n                        }\r\n                        else {\r\n                            depth = 0;\r\n                        }\r\n                    }\r\n                }\r\n                depths[getId(item)] = depth;\r\n                (item as any)._indent = depth;\r\n                if (setCollapsed != null) {\r\n                    (item as any)._collapsed = setCollapsed;\r\n                }\r\n            }\r\n        }\r\n\r\n        export function toggleClick<TItem>(e: JQueryEventObject, row: number, cell: number,\r\n            view: Slick.RemoteView<TItem>, getId: (x: TItem) => any): void {\r\n            var target = $(e.target);\r\n            if (!target.hasClass('s-TreeToggle')) {\r\n                return;\r\n            }\r\n            if (target.hasClass('s-TreeCollapse') || target.hasClass('s-TreeExpand')) {\r\n                var item = view.getItem(row);\r\n                if (item != null) {\r\n                    if (!!!item._collapsed) {\r\n                        item._collapsed = true;\r\n                    }\r\n                    else {\r\n                        item._collapsed = false;\r\n                    }\r\n                    view.updateItem(getId(item), item);\r\n                }\r\n                if (e.shiftKey) {\r\n                    view.beginUpdate();\r\n                    try {\r\n                        setCollapsed(view.getItems(), !!item._collapsed);\r\n                        view.setItems(view.getItems(), true);\r\n                    }\r\n                    finally {\r\n                        view.endUpdate();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","namespace Serenity {\r\n\r\n    export interface IInitializeColumn {\r\n        initializeColumn(column: Slick.Column): void;\r\n    }\r\n\r\n    @Serenity.Decorators.registerInterface('Serenity.IInitializeColumn')\r\n    export class IInitializeColumn {\r\n    }\r\n\r\n    import Option = Serenity.Decorators.option\r\n\r\n    function Formatter(name: string, intf?: any[]) {\r\n        return Decorators.registerFormatter('Serenity.' + name + 'Formatter', intf)\r\n    }\r\n\r\n    @Formatter('Boolean')\r\n    export class BooleanFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n\r\n            if (ctx.value == null) {\r\n                return '';\r\n            }\r\n\r\n            var text;\r\n            if (!!ctx.value) {\r\n                text = Q.tryGetText(this.trueText);\r\n                if (text == null) {\r\n                    text = this.trueText;\r\n                    if (text == null) {\r\n                        text = Q.coalesce(Q.tryGetText('Dialogs.YesButton'), 'Yes');\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                text = Q.tryGetText(this.falseText);\r\n                if (text == null) {\r\n                    text = this.falseText;\r\n                    if (text == null) {\r\n                        text = Q.coalesce(Q.tryGetText('Dialogs.NoButton'), 'No');\r\n                    }\r\n                }\r\n            }\r\n\r\n            return Q.htmlEncode(text);\r\n        }\r\n\r\n        @Option()\r\n        public falseText: string;\r\n\r\n        @Option()\r\n        public trueText: string;\r\n    }\r\n\r\n    @Formatter('Checkbox')\r\n    export class CheckboxFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            return '<span class=\"check-box no-float readonly ' + (!!ctx.value ? ' checked' : '') + '\"></span>';\r\n        }\r\n    }\r\n\r\n    @Formatter('Date')\r\n    export class DateFormatter implements Slick.Formatter {\r\n        constructor() {\r\n            this.displayFormat = Q.Culture.dateFormat;\r\n        }\r\n\r\n        static format(value: any, format?: string) {\r\n            if (value == null) {\r\n                return '';\r\n            }\r\n\r\n            var date: Date;\r\n\r\n            if (value instanceof Date) {\r\n                date = value;\r\n            }\r\n            else if (typeof value === 'string') {\r\n                date = Q.parseISODateTime(value);\r\n\r\n                if (date == null) {\r\n                    return Q.htmlEncode(value);\r\n                }\r\n            }\r\n            else {\r\n                return value.toString();\r\n            }\r\n\r\n            return Q.htmlEncode(Q.formatDate(date, format));\r\n        }\r\n\r\n        @Option()\r\n        public displayFormat: string;\r\n\r\n        format(ctx: Slick.FormatterContext): string {\r\n            return DateFormatter.format(ctx.value, this.displayFormat);\r\n        }\r\n    }\r\n\r\n    @Formatter('DateTime')\r\n    export class DateTimeFormatter extends DateFormatter {\r\n        constructor() {\r\n            super();\r\n            this.displayFormat = Q.Culture.dateTimeFormat;\r\n        }\r\n    }\r\n\r\n    @Formatter('Enum')\r\n    export class EnumFormatter implements Slick.Formatter {\r\n\r\n        format(ctx: Slick.FormatterContext): string {\r\n            return EnumFormatter.format(EnumTypeRegistry.get(this.enumKey), ctx.value);\r\n        }\r\n\r\n        @Option()\r\n        enumKey: string;\r\n\r\n        static format(enumType: any, value: any) {\r\n\r\n            if (value == null) {\r\n                return '';\r\n            }\r\n\r\n            var name = Q.Enum.toString(enumType, value);\r\n            var enumKeyAttr = Q.getAttributes(enumType, EnumKeyAttribute, false);\r\n            var enumKey = ((enumKeyAttr.length > 0) ? enumKeyAttr[0].value : Q.getTypeFullName(enumType));\r\n            return EnumFormatter.getText(enumKey, name);\r\n        }\r\n\r\n        static getText(enumKey: string, name: string) {\r\n            if (Q.isEmptyOrNull(name)) {\r\n                return '';\r\n            }\r\n\r\n            return Q.htmlEncode(Q.coalesce(Q.tryGetText('Enums.' + enumKey + '.' + name), name));\r\n        }\r\n\r\n        static getName(enumType: any, value: any) {\r\n            if (value == null) {\r\n                return '';\r\n            }\r\n            return Q.Enum.toString(enumType, value);\r\n        }\r\n    }\r\n\r\n    @Formatter('FileDownload', [ISlickFormatter, IInitializeColumn])\r\n    export class FileDownloadFormatter implements Slick.Formatter, IInitializeColumn {\r\n\r\n        format(ctx: Slick.FormatterContext): string {\r\n            var dbFile = Q.safeCast(ctx.value, String);\r\n            if (Q.isEmptyOrNull(dbFile)) {\r\n                return '';\r\n            }\r\n\r\n            var downloadUrl = FileDownloadFormatter.dbFileUrl(dbFile);\r\n            var originalName = (!Q.isEmptyOrNull(this.originalNameProperty) ?\r\n                Q.safeCast(ctx.item[this.originalNameProperty], String) : null);\r\n\r\n            originalName = Q.coalesce(originalName, '');\r\n            var text = Q.format(Q.coalesce(this.displayFormat, '{0}'),\r\n                originalName, dbFile, downloadUrl);\r\n\r\n            return \"<a class='file-download-link' target='_blank' href='\" +\r\n                Q.attrEncode(downloadUrl) + \"'>\" + Q.htmlEncode(text) + '</a>';\r\n        }\r\n\r\n        static dbFileUrl(filename: string): string {\r\n            filename = Q.replaceAll(Q.coalesce(filename, ''), '\\\\', '/');\r\n            return Q.resolveUrl('~/upload/') + filename;\r\n        }\r\n\r\n        initializeColumn(column: Slick.Column): void {\r\n            column.referencedFields = column.referencedFields || [];\r\n            if (!Q.isEmptyOrNull(this.originalNameProperty)) {\r\n                column.referencedFields.push(this.originalNameProperty);\r\n                return;\r\n            }\r\n        }\r\n\r\n        @Option()\r\n        displayFormat: string;\r\n\r\n        @Option()\r\n        originalNameProperty: string;\r\n    }\r\n\r\n    @Formatter('Minute')\r\n    export class MinuteFormatter implements Slick.Formatter {\r\n\r\n        format(ctx: Slick.FormatterContext) {\r\n            return MinuteFormatter.format(ctx.value);\r\n        }\r\n\r\n        static format(value: number): string {\r\n            var hour = Math.floor(value / 60);\r\n            var minute = value - hour * 60;\r\n            var hourStr, minuteStr;\r\n\r\n            if (value == null || isNaN(value))\r\n                return '';\r\n\r\n            if (hour < 10)\r\n                hourStr = '0' + hour;\r\n            else\r\n                hourStr = hour.toString();\r\n\r\n            if (minute < 10)\r\n                minuteStr = '0' + minute;\r\n            else\r\n                minuteStr = minute.toString();\r\n\r\n            return Q.format('{0}:{1}', hourStr, minuteStr);\r\n        }\r\n    }\r\n\r\n    @Formatter('Number')\r\n    export class NumberFormatter {\r\n        format(ctx: Slick.FormatterContext): string {\r\n            return NumberFormatter.format(ctx.value, this.displayFormat);\r\n        }\r\n\r\n        static format(value: any, format?: string): string {\r\n            format = Q.coalesce(format, '0.##');\r\n            if (value == null)\r\n                return '';\r\n\r\n            if (typeof (value) === 'number') {\r\n                if (isNaN(value))\r\n                    return '';\r\n\r\n                return Q.htmlEncode(Q.formatNumber(value, format));\r\n            }\r\n\r\n            var dbl = Q.parseDecimal(value.toString());\r\n            if (dbl == null)\r\n                return '';\r\n\r\n            return Q.htmlEncode(value.toString());\r\n        }\r\n\r\n        @Option()\r\n        displayFormat: string;\r\n    }\r\n\r\n    @Formatter('Url', [ISlickFormatter, IInitializeColumn])\r\n    export class UrlFormatter implements Slick.Formatter, IInitializeColumn {\r\n\r\n        format(ctx: Slick.FormatterContext): string {\r\n            var url = (!Q.isEmptyOrNull(this.urlProperty) ?\r\n                Q.coalesce(ctx.item[this.urlProperty], '').toString() :\r\n                Q.coalesce(ctx.value, '').toString());\r\n\r\n            if (Q.isEmptyOrNull(url))\r\n                return '';\r\n\r\n            if (!Q.isEmptyOrNull(this.urlFormat))\r\n                url = Q.format(this.urlFormat, url);\r\n\r\n            if (url != null && Q.startsWith(url, '~/'))\r\n                url = Q.resolveUrl(url);\r\n\r\n            var display = (!Q.isEmptyOrNull(this.displayProperty) ?\r\n                Q.coalesce(ctx.item[this.displayProperty], '').toString() :\r\n                Q.coalesce(ctx.value, '').toString());\r\n\r\n            if (!Q.isEmptyOrNull(this.displayFormat))\r\n                display = Q.format(this.displayFormat, display);\r\n\r\n            var s = \"<a href='\" + Q.attrEncode(url) + \"'\";\r\n            if (!Q.isEmptyOrNull(this.target))\r\n                s += \" target='\" + this.target + \"'\";\r\n\r\n            s += '>' + Q.htmlEncode(display) + '</a>';\r\n\r\n            return s;\r\n        }\r\n\r\n        initializeColumn(column: Slick.Column): void {\r\n            column.referencedFields = column.referencedFields || [];\r\n\r\n            if (!Q.isEmptyOrNull(this.displayProperty)) {\r\n                column.referencedFields.push(this.displayProperty);\r\n                return;\r\n            }\r\n\r\n            if (!Q.isEmptyOrNull(this.urlProperty)) {\r\n                column.referencedFields.push(this.urlProperty);\r\n                return;\r\n            }\r\n        }\r\n\r\n        @Option()\r\n        displayProperty: string;\r\n\r\n        @Option()\r\n        displayFormat: string;\r\n\r\n        @Option()\r\n        urlProperty: string;\r\n\r\n        @Option()\r\n        urlFormat: string;\r\n\r\n        @Option()\r\n        target: string;\r\n    }\r\n\r\n    export namespace FormatterTypeRegistry {\r\n\r\n        let knownTypes: Q.Dictionary<Function>;\r\n\r\n        function setTypeKeysWithoutFormatterSuffix() {\r\n            var suffix = 'formatter';\r\n            for (var k of Object.keys(knownTypes)) {\r\n                if (!Q.endsWith(k, suffix)) \r\n                    continue;\r\n                \r\n                var p = k.substr(0, k.length - suffix.length);\r\n                if (Q.isEmptyOrNull(p))\r\n                    continue;\r\n                \r\n                if (knownTypes[p] != null)\r\n                    continue;\r\n                \r\n                knownTypes[p] = knownTypes[k];\r\n            }\r\n        }\r\n\r\n        function initialize() {\r\n\r\n            if (knownTypes) {\r\n                return;\r\n            }\r\n\r\n            knownTypes = {};\r\n            var types = Q.getTypes();\r\n            for (var type of types) {\r\n                if (!Q.isAssignableFrom(Serenity.ISlickFormatter, type))\r\n                    continue;\r\n                    \r\n                var fullName = Q.getTypeFullName(type).toLowerCase();\r\n                knownTypes[fullName] = type;\r\n\r\n                for (var k of Q.Config.rootNamespaces) {\r\n                    if (Q.startsWith(fullName, k.toLowerCase() + '.')) {\r\n                        var kx = fullName.substr(k.length + 1).toLowerCase();\r\n                        if (knownTypes[kx] == null) {\r\n                            knownTypes[kx] = type;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            setTypeKeysWithoutFormatterSuffix();\r\n        }\r\n\r\n        export function get(key: string): Function {\r\n            if (Q.isEmptyOrNull(key)) \r\n                throw new Q.ArgumentNullException('key');\r\n            \r\n            initialize();\r\n\r\n            var formatterType = knownTypes[key.toLowerCase()];\r\n            if (formatterType == null) {\r\n                throw new Q.Exception(Q.format(\r\n                    \"Can't find {0} formatter type!\", key));\r\n            }\r\n\r\n            return formatterType;\r\n        }\r\n\r\n        export function reset() {\r\n            knownTypes = null;\r\n        }\r\n    }\r\n}","namespace Serenity {\r\n\r\n    export interface SettingStorage {\r\n        getItem(key: string): string;\r\n        setItem(key: string, value: string): void;\r\n    }\r\n\r\n    export interface PersistedGridColumn {\r\n        id: string;\r\n        width?: number;\r\n        sort?: number;\r\n        visible?: boolean;\r\n    }\r\n\r\n    export interface PersistedGridSettings {\r\n        columns?: PersistedGridColumn[];\r\n        filterItems?: FilterLine[];\r\n        quickFilters?: Q.Dictionary<any>;\r\n        quickFilterText?: string;\r\n        quickSearchField?: QuickSearchField;\r\n        quickSearchText?: string;\r\n        includeDeleted?: boolean;\r\n    }\r\n\r\n    export interface GridPersistanceFlags {\r\n        columnWidths?: boolean;\r\n        columnVisibility?: boolean;\r\n        sortColumns?: boolean;\r\n        filterItems?: boolean;\r\n        quickFilters?: boolean;\r\n        quickFilterText?: boolean;\r\n        quickSearch?: boolean;\r\n        includeDeleted?: boolean;\r\n    }\r\n\r\n    export interface IDataGrid {\r\n        getElement(): JQuery;\r\n        getGrid(): Slick.Grid;\r\n        getView(): Slick.RemoteView<any>;\r\n        getFilterStore(): Serenity.FilterStore;\r\n    }\r\n\r\n    @Serenity.Decorators.registerInterface('Serenity.IDataGrid')\r\n    export class IDataGrid {\r\n    }\r\n\r\n    @Serenity.Decorators.registerClass('Serenity.DataGrid', [IDataGrid, IReadOnly])\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    export class DataGrid<TItem, TOptions> extends Widget<TOptions> implements IDataGrid, IReadOnly {\r\n\r\n        protected titleDiv: JQuery;\r\n        protected toolbar: Toolbar;\r\n        protected filterBar: FilterDisplayBar;\r\n        protected quickFiltersDiv: JQuery;\r\n        protected quickFiltersBar: QuickFilterBar;\r\n        protected slickContainer: JQuery;\r\n        protected allColumns: Slick.Column[];\r\n        protected initialSettings: PersistedGridSettings;\r\n        protected restoringSettings: number = 0;\r\n        private idProperty: string;\r\n        private isActiveProperty: string;\r\n        private localTextDbPrefix: string;\r\n        private isDisabled: boolean;\r\n        private rows: any;\r\n        private slickGridOnSort: any;\r\n        private slickGridOnClick: any;\r\n        public view: Slick.RemoteView<TItem>;\r\n        public slickGrid: Slick.Grid;\r\n        public openDialogsAsPanel: boolean;\r\n\r\n        public static defaultRowHeight: number;\r\n        public static defaultHeaderHeight: number;\r\n        public static defaultPersistanceStorage: SettingStorage;\r\n\r\n        private layoutTimer: number; \r\n\r\n        constructor(container: JQuery, options?: TOptions) {\r\n            super(container, options);\r\n\r\n            var self = this;\r\n\r\n            this.element.addClass('s-DataGrid').html('');\r\n            this.element.addClass('s-' + Q.getTypeName(Q.getInstanceType(this)));\r\n\r\n            var layout = function() {\r\n                self.layout();\r\n                Q.LayoutTimer.store(this.layoutTimer);\r\n            }\r\n            this.element.addClass('require-layout').on('layout.' + this.uniqueName, layout);\r\n            this.layoutTimer = Q.LayoutTimer.onSizeChange(() => this.element && this.element[0], Q.debounce(layout, 50));\r\n\r\n            this.setTitle(this.getInitialTitle());\r\n\r\n            var buttons = this.getButtons();\r\n            if (buttons != null) {\r\n                this.createToolbar(buttons);\r\n            }\r\n\r\n            this.slickContainer = this.createSlickContainer();\r\n            this.view = this.createView();\r\n\r\n            this.slickGrid = this.createSlickGrid();\r\n\r\n            if (this.enableFiltering()) {\r\n                this.createFilterBar();\r\n            }\r\n\r\n            if (this.usePager()) {\r\n                this.createPager();\r\n            }\r\n            this.bindToSlickEvents();\r\n            this.bindToViewEvents();\r\n\r\n            if (buttons != null) {\r\n                this.createToolbarExtensions();\r\n            }\r\n\r\n            this.createQuickFilters();\r\n\r\n            this.updateDisabledState();\r\n            this.updateInterface();\r\n\r\n            this.initialSettings = this.getCurrentSettings(null);\r\n            this.restoreSettings(null, null);\r\n            window.setTimeout(() => this.initialPopulate(), 0);\r\n        }\r\n\r\n        protected attrs<TAttr>(attrType: { new(...args: any[]): TAttr }): TAttr[] {\r\n            return Q.getAttributes(Q.getInstanceType(this), attrType, true);\r\n        }\r\n\r\n        protected layout(): void {\r\n            if (!this.element || !this.element.is(':visible') || this.slickContainer == null)\r\n                return;\r\n\r\n            var responsiveHeight = this.element.hasClass('responsive-height');\r\n            var madeAutoHeight = this.slickGrid != null && this.slickGrid.getOptions().autoHeight;\r\n            var shouldAutoHeight = responsiveHeight && window.innerWidth < 768;\r\n\r\n            if (shouldAutoHeight) {\r\n                if (this.element[0] && this.element[0].style.height != \"auto\")\r\n                    this.element[0].style.height = \"auto\";\r\n\r\n                if (!madeAutoHeight) {\r\n\r\n                    this.slickContainer.css('height', 'auto')\r\n                        .children('.slick-pane').each((i, e: HTMLElement) => {\r\n                            if (e.style.height != null && e.style.height != \"auto\")\r\n                                e.style.height = \"auto\";\r\n                        });\r\n\r\n                    this.slickGrid.setOptions({ autoHeight: true });\r\n                }\r\n            }\r\n            else {\r\n                if (madeAutoHeight) {\r\n                    this.slickContainer.children('.slick-viewport').css('height', 'auto');\r\n                    this.slickGrid.setOptions({ autoHeight: false });\r\n                }\r\n\r\n                Q.layoutFillHeight(this.slickContainer);\r\n            }\r\n\r\n            this.slickGrid.resizeCanvas();\r\n        }\r\n\r\n        protected getInitialTitle(): string {\r\n            return null;\r\n        }\r\n\r\n        protected createToolbarExtensions(): void {\r\n        }\r\n\r\n        protected ensureQuickFilterBar(): QuickFilterBar {\r\n\r\n            if (this.quickFiltersDiv == null)\r\n                this.createQuickFilters([]);\r\n\r\n            return this.quickFiltersBar;\r\n        }\r\n\r\n        protected createQuickFilters(filters?: QuickFilter<Widget<any>, any>[]): void {\r\n\r\n            if (this.quickFiltersDiv == null && (filters != null ||\r\n                ((filters = this.getQuickFilters()) && filters != null && filters.length))) {\r\n                this.quickFiltersDiv = $('<div/>').addClass('quick-filters-bar');\r\n                if (this.toolbar) {\r\n                    $('<div/>').addClass('clear').appendTo(this.toolbar.element);\r\n                    this.quickFiltersDiv.appendTo(this.toolbar.element);\r\n                }\r\n                else {\r\n                    this.quickFiltersDiv.appendTo($('<div/>').addClass('s-Toolbar').insertBefore(this.slickContainer));\r\n                }\r\n\r\n                this.quickFiltersBar = new QuickFilterBar(this.quickFiltersDiv, {\r\n                    filters: filters,\r\n                    getTitle: (filter: QuickFilter<Widget<any>, any>) => this.determineText(pre => pre + filter.field),\r\n                    idPrefix: this.uniqueName + '_QuickFilter_'\r\n                });\r\n                this.quickFiltersBar.onChange = (e) => this.quickFilterChange(e);\r\n            }\r\n        }\r\n\r\n        protected getQuickFilters(): QuickFilter<Widget<any>, any>[] {\r\n            return this.allColumns.filter(function (x) {\r\n                return x.sourceItem &&\r\n                    x.sourceItem.quickFilter === true &&\r\n                    (x.sourceItem.readPermission == null ||\r\n                        Q.Authorization.hasPermission(x.sourceItem.readPermission));\r\n            }).map(x => DataGrid.propertyItemToQuickFilter(x.sourceItem))\r\n                .filter(x => x != null);\r\n        }\r\n\r\n        public static propertyItemToQuickFilter(item: PropertyItem) {\r\n            var quick: any = {};\r\n\r\n            var name = item.name;\r\n            var title = Q.tryGetText(item.title);\r\n            if (title == null) {\r\n                title = item.title;\r\n                if (title == null) {\r\n                    title = name;\r\n                }\r\n            }\r\n\r\n            var filteringType = Serenity.FilteringTypeRegistry.get(Q.coalesce(item.filteringType, 'String'));\r\n            if (filteringType === Serenity.DateFiltering) {\r\n                quick = QuickFilterBar.dateRange(name, title);\r\n            }\r\n            else if (filteringType === Serenity.DateTimeFiltering) {\r\n                quick = QuickFilterBar.dateTimeRange(name, title);\r\n            }\r\n            else if (filteringType === Serenity.BooleanFiltering) {\r\n                var q = item.quickFilterParams || {};\r\n                var f = item.filteringParams || {};\r\n                var trueText = q['trueText'];\r\n                if (trueText == null) {\r\n                    trueText = f['trueText'];\r\n                }\r\n                var falseText = q['falseText'];\r\n                if (falseText == null) {\r\n                    falseText = f['falseText'];\r\n                }\r\n                quick = QuickFilterBar.boolean(name, title, trueText, falseText);\r\n            }\r\n            else {\r\n                var filtering = new (filteringType as any)() as IFiltering;\r\n                if (filtering && Q.isInstanceOfType(filtering, Serenity.IQuickFiltering)) {\r\n                    Serenity.ReflectionOptionsSetter.set(filtering, item.filteringParams);\r\n                    filtering.set_field(item);\r\n                    filtering.set_operator({ key: Serenity.FilterOperators.EQ });\r\n                    (filtering as any).initQuickFilter(quick);\r\n                    quick.options = Q.extend(Q.deepClone(quick.options), item.quickFilterParams);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            if (!!item.quickFilterSeparator) {\r\n                quick.separator = true;\r\n            }\r\n\r\n            quick.cssClass = item.quickFilterCssClass;\r\n            return quick;\r\n        }\r\n\r\n        protected findQuickFilter<TWidget>(type: { new(...args: any[]): TWidget }, field: string): TWidget {\r\n            if (this.quickFiltersBar != null)\r\n                return this.quickFiltersBar.find(type, field);\r\n\r\n            return $('#' + this.uniqueName + '_QuickFilter_' + field).getWidget(type);\r\n        }\r\n\r\n        protected tryFindQuickFilter<TWidget>(type: { new(...args: any[]): TWidget }, field: string): TWidget {\r\n            if (this.quickFiltersBar != null)\r\n                return this.quickFiltersBar.tryFind(type, field);\r\n\r\n            var el = $('#' + this.uniqueName + '_QuickFilter_' + field);\r\n            if (!el.length)\r\n                return null;\r\n\r\n            return el.tryGetWidget(type);\r\n        }\r\n\r\n        protected createIncludeDeletedButton(): void {\r\n            if (!Q.isEmptyOrNull(this.getIsActiveProperty()) ||\r\n                !Q.isEmptyOrNull(this.getIsDeletedProperty())) {\r\n                Serenity.GridUtils.addIncludeDeletedToggle(this.toolbar.element, this.view, null, false);\r\n            }\r\n        }\r\n\r\n        protected getQuickSearchFields(): QuickSearchField[] {\r\n            return null;\r\n        }\r\n\r\n        protected createQuickSearchInput(): void {\r\n            Serenity.GridUtils.addQuickSearchInput(this.toolbar.element, this.view, this.getQuickSearchFields());\r\n        }\r\n\r\n        public destroy() {\r\n            if (this.layoutTimer) {\r\n                this.layoutTimer = Q.LayoutTimer.off(this.layoutTimer);\r\n            }\r\n            if (this.quickFiltersBar) {\r\n                this.quickFiltersBar.destroy();\r\n                this.quickFiltersBar = null;\r\n            }\r\n\r\n            if (this.toolbar) {\r\n                this.toolbar.destroy();\r\n                this.toolbar = null;\r\n            }\r\n\r\n            if (this.slickGrid) {\r\n                this.slickGrid.onClick.clear();\r\n                this.slickGrid.onSort.clear();\r\n                this.slickGrid.onColumnsResized.clear();\r\n                this.slickGrid.onColumnsReordered.clear();\r\n                this.slickGrid.destroy();\r\n                this.slickGrid = null;\r\n            }\r\n\r\n            if (this.view) {\r\n                this.view.onDataChanged.clear();\r\n                this.view.onSubmit = null;\r\n                this.view.setFilter(null);\r\n                this.view = null;\r\n            }\r\n\r\n            this.titleDiv = null;\r\n            super.destroy();\r\n        }\r\n\r\n        protected getItemCssClass(item: TItem, index: number): string {\r\n            var activeFieldName = this.getIsActiveProperty();\r\n            var deletedFieldName = this.getIsDeletedProperty();\r\n            if (Q.isEmptyOrNull(activeFieldName) && Q.isEmptyOrNull(deletedFieldName)) {\r\n                return null;\r\n            }\r\n\r\n            if (activeFieldName) {\r\n                var value = item[activeFieldName];\r\n                if (value == null) {\r\n                    return null;\r\n                }\r\n\r\n                if (typeof (value) === 'number') {\r\n                    if (value < 0) {\r\n                        return 'deleted';\r\n                    }\r\n                    else if (value === 0) {\r\n                        return 'inactive';\r\n                    }\r\n                }\r\n                else if (typeof (value) === 'boolean') {\r\n                    if (value === false) {\r\n                        return 'deleted';\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return item[deletedFieldName] ? 'deleted' : null;\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        protected getItemMetadata(item: TItem, index: number): any {\r\n            var itemClass = this.getItemCssClass(item, index);\r\n            if (Q.isEmptyOrNull(itemClass)) {\r\n                return new Object();\r\n            }\r\n            return { cssClasses: itemClass };\r\n        }\r\n\r\n        protected postProcessColumns(columns: Slick.Column[]): Slick.Column[] {\r\n            Serenity.SlickHelper.setDefaults(columns, this.getLocalTextDbPrefix());\r\n            return columns;\r\n        }\r\n\r\n        protected initialPopulate(): void {\r\n            var self = this;\r\n            if (this.populateWhenVisible()) {\r\n                Serenity.LazyLoadHelper.executeEverytimeWhenShown(this.element, function () {\r\n                    self.refreshIfNeeded();\r\n                }, false);\r\n                if (this.element.is(':visible') && this.view) {\r\n                    this.view.populate();\r\n                }\r\n            }\r\n            else if (this.view) {\r\n                this.view.populate();\r\n            }\r\n        }\r\n\r\n        protected canFilterColumn(column: Slick.Column): boolean {\r\n            return (column.sourceItem != null && \r\n                column.sourceItem.notFilterable !== true &&\r\n                (column.sourceItem.readPermission == null ||\r\n                    Q.Authorization.hasPermission(column.sourceItem.readPermission)));\r\n        }\r\n\r\n        protected initializeFilterBar() {\r\n\r\n            this.filterBar.set_store(new Serenity.FilterStore(\r\n                this.allColumns\r\n                    .filter(c => this.canFilterColumn(c))\r\n                    .map(x => x.sourceItem)));\r\n\r\n            this.filterBar.get_store().add_changed((s: JQueryEventObject, e: any) => {\r\n                if (this.restoringSettings <= 0) {\r\n                    this.persistSettings(null);\r\n                    this.view && (this.view.seekToPage = 1);\r\n                    this.refresh();\r\n                }\r\n            });\r\n        }\r\n\r\n        protected createSlickGrid(): Slick.Grid {\r\n\r\n            var visibleColumns: Slick.Column[];\r\n\r\n            this.allColumns = this.getColumns();\r\n            visibleColumns = this.postProcessColumns(this.allColumns).filter(function (x) {\r\n                return x.visible !== false;\r\n            });\r\n\r\n            var slickOptions = this.getSlickOptions();\r\n            var grid = new Slick.Grid(this.slickContainer, this.view as any, visibleColumns, slickOptions);\r\n            grid.registerPlugin(new Slick.AutoTooltips({\r\n                enableForHeaderCells: true\r\n            }));\r\n\r\n            this.slickGrid = grid;\r\n            this.rows = this.slickGrid;\r\n            \r\n            this.setInitialSortOrder();\r\n\r\n            return grid;\r\n        }\r\n\r\n        protected setInitialSortOrder(): void {\r\n            var sortBy = this.getDefaultSortBy();\r\n\r\n            if (this.view) {\r\n                this.view.sortBy = Array.prototype.slice.call(sortBy);\r\n            }\r\n\r\n            var mapped = sortBy.map(function (s) {\r\n                var x: Slick.ColumnSort = {};\r\n                if (s && Q.endsWith(s.toLowerCase(), ' desc')) {\r\n                    x.columnId = Q.trimEnd(s.substr(0, s.length - 5));\r\n                    x.sortAsc = false;\r\n                }\r\n                else {\r\n                    x.columnId = s;\r\n                    x.sortAsc = true;\r\n                }\r\n                return x;\r\n            });\r\n\r\n            this.slickGrid.setSortColumns(mapped);\r\n        }\r\n\r\n        itemAt(row: number): TItem {\r\n            return this.slickGrid.getDataItem(row);\r\n        }\r\n\r\n        rowCount() {\r\n            return this.slickGrid.getDataLength();\r\n        }\r\n\r\n        getItems(): TItem[] {\r\n            return this.view.getItems();\r\n        }\r\n\r\n        setItems(value: TItem[]) {\r\n            this.view.setItems(value, true);\r\n        }\r\n\r\n        protected bindToSlickEvents() {\r\n            var self = this;\r\n            this.slickGridOnSort = (e: JQuery, p: any) => {\r\n                self.view.populateLock();\r\n                try {\r\n                    var sortBy = [];\r\n                    var col: any;\r\n                    if (!!p.multiColumnSort) {\r\n                        for (var i = 0; !!(i < p.sortCols.length); i++) {\r\n                            var x = p.sortCols[i];\r\n                            col = x.sortCol;\r\n                            if (col == null) {\r\n                                col = {};\r\n                            }\r\n                            sortBy.push(col.field + (!!x.sortAsc ? '' : ' DESC'));\r\n                        }\r\n                    }\r\n                    else {\r\n                        var col = p.sortCol;\r\n                        if (col == null) {\r\n                            col = {};\r\n                        }\r\n                        sortBy.push(col.field + (!!p.sortAsc ? '' : ' DESC'));\r\n                    }\r\n\r\n                    self.view.seekToPage = 1;\r\n                    self.view.sortBy = sortBy;\r\n                }\r\n                finally {\r\n                    self.view.populateUnlock();\r\n                }\r\n                self.view.populate();\r\n                this.persistSettings(null);\r\n            };\r\n\r\n            this.slickGrid.onSort.subscribe(this.slickGridOnSort);\r\n\r\n            this.slickGridOnClick = (e1: JQueryEventObject, p1: any) => {\r\n                self.onClick(e1, p1.row, p1.cell);\r\n            }\r\n\r\n            this.slickGrid.onClick.subscribe(this.slickGridOnClick);\r\n\r\n            this.slickGrid.onColumnsReordered.subscribe((e2: JQueryEventObject, p2: any) => {\r\n                return this.persistSettings(null);\r\n            });\r\n\r\n            this.slickGrid.onColumnsResized.subscribe((e3: JQueryEventObject, p3: any) => {\r\n                return this.persistSettings(null);\r\n            });\r\n        }\r\n\r\n        protected getAddButtonCaption(): string {\r\n            return Q.coalesce(Q.tryGetText('Controls.DataGrid.NewButton'), 'New');\r\n        }\r\n\r\n        protected getButtons(): ToolButton[] {\r\n            return [];\r\n        }\r\n\r\n        protected editItem(entityOrId: any): void {\r\n            throw new Error(\"Not Implemented!\");\r\n        }\r\n\r\n        protected editItemOfType(itemType: string, entityOrId: any): void {\r\n            if (itemType === this.getItemType()) {\r\n                this.editItem(entityOrId);\r\n                return;\r\n            }\r\n\r\n            throw new Error(\"Not Implemented!\");\r\n        }\r\n\r\n        protected onClick(e: JQueryEventObject, row: number, cell: number): void {\r\n            if (e.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            var target = $(e.target);\r\n            if (!target.hasClass('s-EditLink')) {\r\n                target = target.closest('a');\r\n            }\r\n\r\n            if (target.hasClass('s-EditLink')) {\r\n                e.preventDefault();\r\n                this.editItemOfType(Serenity.SlickFormatting.getItemType(target), Serenity.SlickFormatting.getItemId(target));\r\n            }\r\n        }\r\n\r\n        protected viewDataChanged(e: any, rows: TItem[]): void {\r\n            this.markupReady();\r\n            this.layout();\r\n        }\r\n\r\n        protected bindToViewEvents(): void {\r\n            var self = this;\r\n\r\n            this.view.onDataChanged.subscribe(function (e, d) {\r\n                return self.viewDataChanged(e, d);\r\n            });\r\n\r\n            this.view.onSubmit = function (view) {\r\n                return self.onViewSubmit();\r\n            };\r\n\r\n            this.view.setFilter(function (item, view1) {\r\n                return self.onViewFilter(item);\r\n            });\r\n\r\n            this.view.onProcessData = function (response, view2) {\r\n                return self.onViewProcessData(response);\r\n            }\r\n        }\r\n\r\n        protected onViewProcessData(response: ListResponse<TItem>): ListResponse<TItem> {\r\n            return response;\r\n        }\r\n\r\n        protected onViewFilter(item: TItem): boolean {\r\n            return true;\r\n        }\r\n\r\n        protected getIncludeColumns(include: { [key: string]: boolean }): void {\r\n            var columns = this.slickGrid.getColumns();\r\n            for (var column of columns) {\r\n                if (column.field) {\r\n                    include[column.field] = true;\r\n                }\r\n\r\n                if (column.referencedFields) {\r\n                    for (var x of column.referencedFields) {\r\n                        include[x] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        protected setCriteriaParameter(): void {\r\n            delete this.view.params['Criteria'];\r\n            if (this.filterBar) {\r\n                var criteria = this.filterBar.get_store().get_activeCriteria();\r\n                if (!Serenity.Criteria.isEmpty(criteria)) {\r\n                    this.view.params.Criteria = criteria;\r\n                }\r\n            }\r\n        }\r\n\r\n        protected setEquality(field: string, value: any): void {\r\n            Q.setEquality(this.view.params, field, value);\r\n        }\r\n\r\n        protected setIncludeColumnsParameter(): void {\r\n            var include = {};\r\n            this.getIncludeColumns(include);\r\n            var array = [];\r\n            for (var key of Object.keys(include)) {\r\n                array.push(key);\r\n            }\r\n            this.view.params.IncludeColumns = array;\r\n        }\r\n\r\n        protected onViewSubmit(): boolean {\r\n            if (this.isDisabled || !this.getGridCanLoad()) {\r\n                return false;\r\n            }\r\n\r\n            this.setCriteriaParameter();\r\n            this.setIncludeColumnsParameter();\r\n            this.invokeSubmitHandlers();\r\n\r\n            return true;\r\n        }\r\n\r\n        protected markupReady(): void {\r\n        }\r\n\r\n        protected createSlickContainer(): JQuery {\r\n            return $('<div class=\"grid-container\"></div>').appendTo(this.element);\r\n        }\r\n\r\n        protected createView(): Slick.RemoteView<TItem> {\r\n            var opt = this.getViewOptions();\r\n            return new Slick.RemoteView<TItem>(opt);\r\n        }\r\n\r\n        protected getDefaultSortBy(): any[] {\r\n            if (this.slickGrid) {\r\n\r\n                var columns = this.slickGrid.getColumns().filter(function (x) {\r\n                    return x.sortOrder && x.sortOrder !== 0;\r\n                });\r\n\r\n                if (columns.length > 0) {\r\n                    columns.sort(function (x1, y) {\r\n                        return x1.sortOrder < y.sortOrder ? -1 : (x1.sortOrder > y.sortOrder ? 1 : 0);\r\n                    });\r\n\r\n                    var list = [];\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var col = columns[i];\r\n                        list.push(col.field + ((col.sortOrder < 0) ? ' DESC' : ''));\r\n                    }\r\n\r\n                    return list;\r\n                }\r\n            }\r\n\r\n            return [];\r\n        }\r\n\r\n        protected usePager(): boolean {\r\n            return false;\r\n        }\r\n\r\n        protected enableFiltering(): boolean {\r\n            var attr = this.attrs(Serenity.FilterableAttribute);\r\n            return attr.length > 0 && attr[0].value;\r\n        }\r\n\r\n        protected populateWhenVisible(): boolean {\r\n            return false;\r\n        }\r\n\r\n        protected createFilterBar(): void {\r\n            var filterBarDiv = $('<div/>').appendTo(this.element);\r\n            this.filterBar = new Serenity.FilterDisplayBar(filterBarDiv);\r\n            this.initializeFilterBar();\r\n        }\r\n\r\n        protected getPagerOptions(): Slick.PagerOptions {\r\n            return {\r\n                view: this.view,\r\n                rowsPerPage: 20,\r\n                rowsPerPageOptions: [20, 100, 500, 2500]\r\n            };\r\n        }\r\n\r\n        protected createPager(): void {\r\n            var pagerDiv = $('<div></div>').appendTo(this.element);\r\n            new SlickPager(pagerDiv, this.getPagerOptions());\r\n        }\r\n\r\n        protected getViewOptions() {\r\n            var opt: Slick.RemoteViewOptions = {};\r\n            opt.idField = this.getIdProperty();\r\n            opt.sortBy = this.getDefaultSortBy();\r\n\r\n            if (!this.usePager()) {\r\n                opt.rowsPerPage = 0;\r\n            }\r\n            else if (this.element.hasClass('responsive-height')) {\r\n                opt.rowsPerPage = (($(window.window).width() < 768) ? 20 : 100);\r\n            }\r\n            else {\r\n                opt.rowsPerPage = 100;\r\n            }\r\n\r\n            opt.getItemMetadata = (item, index) => {\r\n                return this.getItemMetadata(item, index);\r\n            };\r\n\r\n            return opt;\r\n        }\r\n\r\n        protected createToolbar(buttons: ToolButton[]): void {\r\n            var toolbarDiv = $('<div class=\"grid-toolbar\"></div>').appendTo(this.element);\r\n            this.toolbar = new Serenity.Toolbar(toolbarDiv, { buttons: buttons, hotkeyContext: this.element[0] });\r\n        }\r\n\r\n        getTitle(): string {\r\n            if (!this.titleDiv) {\r\n                return null;\r\n            }\r\n\r\n            return this.titleDiv.children('.title-text').text();\r\n        }\r\n\r\n        setTitle(value: string) {\r\n            if (value !== this.getTitle()) {\r\n                if (value == null) {\r\n                    if (this.titleDiv) {\r\n                        this.titleDiv.remove();\r\n                        this.titleDiv = null;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this.titleDiv) {\r\n                        this.titleDiv = $('<div class=\"grid-title\"><div class=\"title-text\"></div></div>')\r\n                            .prependTo(this.element);\r\n                    }\r\n                    this.titleDiv.children('.title-text').text(value);\r\n                }\r\n\r\n                this.layout();\r\n            }\r\n        }\r\n\r\n        protected getItemType(): string {\r\n            return 'Item';\r\n        }\r\n\r\n        protected itemLink(itemType?: string, idField?: string, text?: (ctx: Slick.FormatterContext) => string,\r\n            cssClass?: (ctx: Slick.FormatterContext) => string, encode: boolean = true): Slick.Format {\r\n\r\n            if (itemType == null) {\r\n                itemType = this.getItemType();\r\n            }\r\n\r\n            if (idField == null) {\r\n                idField = this.getIdProperty();\r\n            }\r\n\r\n            return Serenity.SlickFormatting.itemLink(itemType, idField, text, cssClass, encode);\r\n        }\r\n\r\n        protected getColumnsKey(): string {\r\n            var attr = this.attrs(Serenity.ColumnsKeyAttribute);\r\n            if (attr && attr.length > 0) {\r\n                return attr[0].value;\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        protected getPropertyItems(): PropertyItem[] {\r\n            var attr = this.attrs(Serenity.ColumnsKeyAttribute);\r\n\r\n            var columnsKey = this.getColumnsKey();\r\n            if (!Q.isEmptyOrNull(columnsKey)) {\r\n                return Q.getColumns(columnsKey);\r\n            }\r\n\r\n            return [];\r\n        }\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n            var propertyItems = this.getPropertyItems();\r\n            return this.propertyItemsToSlickColumns(propertyItems);\r\n        }\r\n\r\n        protected propertyItemsToSlickColumns(propertyItems: PropertyItem[]): Slick.Column[] {\r\n            var columns = Serenity.PropertyItemSlickConverter.toSlickColumns(propertyItems);\r\n            for (var i = 0; i < propertyItems.length; i++) {\r\n                var item = propertyItems[i];\r\n                var column = columns[i];\r\n                if (item.editLink === true) {\r\n                    var oldFormat = { $: column.format };\r\n                    var css = { $: (item.editLinkCssClass) != null ? item.editLinkCssClass : null };\r\n                    column.format = this.itemLink(\r\n                        item.editLinkItemType != null ? item.editLinkItemType : null,\r\n                        item.editLinkIdField != null ? item.editLinkIdField : null,\r\n                        function(ctx: Slick.FormatterContext) {\r\n                            if (this.oldFormat.$ != null) {\r\n                                return this.oldFormat.$(ctx);\r\n                            }\r\n                            return Q.htmlEncode(ctx.value);\r\n                        }.bind({ oldFormat: oldFormat }),\r\n                        function(ctx1: Slick.FormatterContext) {\r\n                            return Q.coalesce(this.css.$, '');\r\n                        }.bind({ css: css }), false);\r\n\r\n                    if (!Q.isEmptyOrNull(item.editLinkIdField)) {\r\n                        column.referencedFields = column.referencedFields || [];\r\n                        column.referencedFields.push(item.editLinkIdField);\r\n                    }\r\n                }\r\n            }\r\n            return columns;\r\n        }\r\n\r\n        protected getSlickOptions(): Slick.GridOptions {\r\n            var opt: Slick.GridOptions = {};\r\n            opt.multiSelect = false;\r\n            opt.multiColumnSort = true;\r\n            opt.enableCellNavigation = false;\r\n            opt.headerRowHeight = Serenity.DataGrid.defaultHeaderHeight;\r\n            opt.rowHeight = Serenity.DataGrid.defaultRowHeight;\r\n            return opt;\r\n        }\r\n\r\n        protected populateLock(): void {\r\n            this.view.populateLock();\r\n        }\r\n\r\n        protected populateUnlock(): void {\r\n            this.view.populateUnlock();\r\n        }\r\n\r\n        protected getGridCanLoad(): boolean {\r\n            return true;\r\n        }\r\n\r\n        public refresh() {\r\n            if (!this.populateWhenVisible()) {\r\n                this.internalRefresh();\r\n                return;\r\n            }\r\n            if (this.slickContainer.is(':visible')) {\r\n                this.slickContainer.data('needsRefresh', false);\r\n                this.internalRefresh();\r\n                return;\r\n            }\r\n            this.slickContainer.data('needsRefresh', true);\r\n        }\r\n\r\n        protected refreshIfNeeded(): void {\r\n            if (!!this.slickContainer.data('needsRefresh')) {\r\n                this.slickContainer.data('needsRefresh', false);\r\n                this.internalRefresh();\r\n            }\r\n        }\r\n\r\n        protected internalRefresh(): void {\r\n            this.view.populate();\r\n        }\r\n\r\n        public setIsDisabled(value: boolean): void {\r\n            if (this.isDisabled !== value) {\r\n                this.isDisabled = value;\r\n                if (this.isDisabled) {\r\n                    this.view.setItems([], true);\r\n                }\r\n\r\n                this.updateDisabledState();\r\n            }\r\n        }\r\n\r\n        private _readonly: boolean;\r\n\r\n        public get readOnly(): boolean {\r\n            return this.get_readOnly();\r\n        }\r\n\r\n        public set readOnly(value: boolean) {\r\n            this.set_readOnly(value);\r\n        }\r\n\r\n        public get_readOnly() {\r\n            return !!this._readonly;\r\n        }\r\n\r\n        public set_readOnly(value: boolean) {\r\n            if (!!this._readonly != !!value) {\r\n                this._readonly = !!value;\r\n                this.updateInterface();\r\n            }\r\n        }\r\n\r\n        protected updateInterface() {\r\n            this.toolbar && this.toolbar.updateInterface();\r\n        }\r\n\r\n        protected getLocalTextDbPrefix(): string {\r\n            if (this.localTextDbPrefix == null) {\r\n                this.localTextDbPrefix = Q.coalesce(this.getLocalTextPrefix(), '');\r\n                if (this.localTextDbPrefix.length > 0 && !Q.endsWith(this.localTextDbPrefix, '.')) {\r\n                    this.localTextDbPrefix = 'Db.' + this.localTextDbPrefix + '.';\r\n                }\r\n            }\r\n\r\n            return this.localTextDbPrefix;\r\n        }\r\n\r\n        protected getLocalTextPrefix(): string {\r\n            var attr = this.attrs(LocalTextPrefixAttribute);\r\n\r\n            if (attr.length >= 1)\r\n                return attr[0].value;\r\n\r\n            return '';\r\n        }\r\n\r\n        protected getIdProperty(): string {\r\n            if (this.idProperty == null) {\r\n                var attr = this.attrs(IdPropertyAttribute);\r\n\r\n                if (attr.length === 1) {\r\n                    this.idProperty = attr[0].value;\r\n                }\r\n                else {\r\n                    this.idProperty = 'ID';\r\n                }\r\n            }\r\n\r\n            return this.idProperty;\r\n        }\r\n\r\n        protected getIsDeletedProperty(): string {\r\n            return null;\r\n        }\r\n\r\n        protected getIsActiveProperty(): string {\r\n            if (this.isActiveProperty == null) {\r\n                var attr = this.attrs(IsActivePropertyAttribute);\r\n\r\n                if (attr.length === 1) {\r\n                    this.isActiveProperty = attr[0].value;\r\n                }\r\n                else {\r\n                    this.isActiveProperty = '';\r\n                }\r\n            }\r\n            return this.isActiveProperty;\r\n        }\r\n\r\n        protected updateDisabledState(): void {\r\n            this.slickContainer.toggleClass('ui-state-disabled', !!this.isDisabled);\r\n        }\r\n\r\n        protected resizeCanvas(): void {\r\n            this.slickGrid.resizeCanvas();\r\n        }\r\n\r\n        protected subDialogDataChange(): void {\r\n            this.refresh();\r\n        }\r\n\r\n        protected addFilterSeparator(): void {\r\n            this.ensureQuickFilterBar().addSeparator();\r\n        }\r\n\r\n        protected determineText(getKey: (prefix: string) => string) {\r\n            var localTextPrefix = this.getLocalTextDbPrefix();\r\n            if (!Q.isEmptyOrNull(localTextPrefix)) {\r\n                var local = Q.tryGetText(getKey(localTextPrefix));\r\n                if (local != null) {\r\n                    return local;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        protected addQuickFilter<TWidget extends Widget<any>, TOptions>(opt: QuickFilter<TWidget, TOptions>): TWidget {\r\n            return this.ensureQuickFilterBar().add(opt);\r\n        }\r\n\r\n        protected addDateRangeFilter(field: string, title?: string): Serenity.DateEditor {\r\n            return this.ensureQuickFilterBar().addDateRange(field, title);\r\n        }\r\n\r\n        protected dateRangeQuickFilter(field: string, title?: string) {\r\n            return QuickFilterBar.dateRange(field, title);\r\n        }\r\n\r\n        protected addDateTimeRangeFilter(field: string, title?: string) {\r\n            return this.ensureQuickFilterBar().addDateTimeRange(field, title);\r\n        }\r\n\r\n        protected dateTimeRangeQuickFilter(field: string, title?: string) {\r\n            return QuickFilterBar.dateTimeRange(field, title);\r\n        }\r\n\r\n        protected addBooleanFilter(field: string, title?: string, yes?: string, no?: string): SelectEditor {\r\n            return this.ensureQuickFilterBar().addBoolean(field, title, yes, no);\r\n        }\r\n\r\n        protected booleanQuickFilter(field: string, title?: string, yes?: string, no?: string) {\r\n            return QuickFilterBar.boolean(field, title, yes, no);\r\n        }\r\n\r\n        protected invokeSubmitHandlers() {\r\n            if (this.quickFiltersBar != null) {\r\n                this.quickFiltersBar.onSubmit(this.view.params);\r\n            }\r\n        }\r\n\r\n        protected quickFilterChange(e: JQueryEventObject) {\r\n            this.persistSettings(null);\r\n            this.view && (this.view.seekToPage = 1);\r\n            this.refresh();\r\n        }\r\n\r\n        protected getPersistanceStorage(): SettingStorage {\r\n            return Serenity.DataGrid.defaultPersistanceStorage;\r\n        }\r\n\r\n        protected getPersistanceKey(): string {\r\n            var key = 'GridSettings:';\r\n            var path = window.location.pathname;\r\n            if (!Q.isEmptyOrNull(path)) {\r\n                key += path.substr(1).split(String.fromCharCode(47)).slice(0, 2).join('/') + ':';\r\n            }\r\n\r\n            key += Q.getTypeFullName(Q.getInstanceType(this));\r\n            return key;\r\n        }\r\n\r\n        protected gridPersistanceFlags(): GridPersistanceFlags {\r\n            return {};\r\n        }\r\n\r\n        protected canShowColumn(column: Slick.Column) {\r\n            if (column == null) {\r\n                return false;\r\n            }\r\n\r\n            var item = column.sourceItem;\r\n            if (item == null) {\r\n                return true;\r\n            }\r\n\r\n            if (item.filterOnly === true) {\r\n                return false;\r\n            }\r\n\r\n            if (item.readPermission == null) {\r\n                return true;\r\n            }\r\n\r\n            return Q.Authorization.hasPermission(item.readPermission);\r\n        }\r\n\r\n        protected getPersistedSettings(): PersistedGridSettings {\r\n            var storage = this.getPersistanceStorage();\r\n            if (storage == null)\r\n                return null;\r\n\r\n            var json = Q.trimToNull(storage.getItem(this.getPersistanceKey()));\r\n            if (json != null && Q.startsWith(json, '{') && Q.endsWith(json, '}'))\r\n                return JSON.parse(json);\r\n\r\n            return null;\r\n        }\r\n\r\n        protected restoreSettings(settings?: PersistedGridSettings, flags?: GridPersistanceFlags): void {\r\n            if (!this.slickGrid)\r\n                return;\r\n\r\n            if (settings == null) {\r\n                settings = this.getPersistedSettings();\r\n                if (settings == null)\r\n                    return;\r\n            }\r\n\r\n            var columns = this.slickGrid.getColumns();\r\n            var colById: Q.Dictionary<Slick.Column> = null;\r\n            var updateColById = function(cl: Slick.Column[]) {\r\n                colById = {};\r\n                for (var $t1 = 0; $t1 < cl.length; $t1++) {\r\n                    var c = cl[$t1];\r\n                    colById[c.id] = c;\r\n                }\r\n            };\r\n\r\n            this.view.beginUpdate();\r\n            this.restoringSettings++;\r\n            try {\r\n                flags = flags || this.gridPersistanceFlags();\r\n                if (settings.columns != null) {\r\n                    if (flags.columnVisibility !== false) {\r\n                        var visible = {};\r\n                        updateColById(this.allColumns);\r\n                        var newColumns = [];\r\n                        for (var $t2 = 0; $t2 < settings.columns.length; $t2++) {\r\n                            var x = settings.columns[$t2];\r\n                            if (x.id != null && x.visible === true) {\r\n                                var column = colById[x.id];\r\n                                if (this.canShowColumn(column)) {\r\n                                    column.visible = true;\r\n                                    newColumns.push(column);\r\n                                    delete colById[x.id];\r\n                                }\r\n                            }\r\n                        }\r\n                        for (var $t3 = 0; $t3 < this.allColumns.length; $t3++) {\r\n                            var c1 = this.allColumns[$t3];\r\n                            if (colById[c1.id] != null) {\r\n                                c1.visible = false;\r\n                                newColumns.push(c1);\r\n                            }\r\n                        }\r\n                        this.allColumns = newColumns;\r\n                        columns = this.allColumns.filter(function (x1) {\r\n                            return x1.visible === true;\r\n                        });\r\n                    }\r\n                    if (flags.columnWidths !== false) {\r\n                        updateColById(columns);\r\n                        for (var $t4 = 0; $t4 < settings.columns.length; $t4++) {\r\n                            var x2 = settings.columns[$t4];\r\n                            if (x2.id != null && x2.width != null && x2.width !== 0) {\r\n                                var column1 = colById[x2.id];\r\n                                if (column1 != null) {\r\n                                    column1.width = x2.width;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (flags.sortColumns !== false) {\r\n                        updateColById(columns);\r\n                        var list = [];\r\n                        var sortColumns = settings.columns.filter(function (x3) {\r\n                            return x3.id != null && Q.coalesce(x3.sort, 0) !== 0;\r\n                        });\r\n\r\n                        sortColumns.sort(function (a, b) {\r\n                            return a.sort - b.sort;\r\n                        });\r\n\r\n                        for (var $t5 = 0; $t5 < sortColumns.length; $t5++) {\r\n                            var x4 = sortColumns[$t5];\r\n                            var column2 = colById[x4.id];\r\n                            if (column2 != null) {\r\n                                list.push({\r\n                                    columnId: x4.id,\r\n                                    sortAsc: x4.sort > 0\r\n                                });\r\n                            }\r\n                        }\r\n                        this.view.sortBy = list.map(function (x5) {\r\n                            return x5.columnId + ((x5.sortAsc === false) ? ' DESC' : '');\r\n                        });\r\n                        this.slickGrid.setSortColumns(list);\r\n                    }\r\n                    this.slickGrid.setColumns(columns);\r\n                    this.slickGrid.invalidate();\r\n                }\r\n\r\n                if (settings.filterItems != null &&\r\n                    flags.filterItems !== false &&\r\n                    this.filterBar != null &&\r\n                    this.filterBar.get_store() != null) {\r\n                    var items = this.filterBar.get_store().get_items();\r\n                    items.length = 0;\r\n                    items.push.apply(items, settings.filterItems);\r\n                    this.filterBar.get_store().raiseChanged();\r\n                }\r\n\r\n                if (settings.includeDeleted != null &&\r\n                    flags.includeDeleted !== false) {\r\n                    var includeDeletedToggle = this.element.find('.s-IncludeDeletedToggle');\r\n                    if (!!settings.includeDeleted !== includeDeletedToggle.hasClass('pressed')) {\r\n                        includeDeletedToggle.children('a').click();\r\n                    }\r\n                }\r\n\r\n                if (settings.quickFilters != null &&\r\n                    flags.quickFilters !== false &&\r\n                    this.quickFiltersDiv != null &&\r\n                    this.quickFiltersDiv.length > 0) {\r\n                    this.quickFiltersDiv.find('.quick-filter-item').each((i, e) => {\r\n                        var field = $(e).data('qffield');\r\n\r\n                        if (Q.isEmptyOrNull(field)) {\r\n                            return;\r\n                        }\r\n\r\n                        var widget = $('#' + this.uniqueName + '_QuickFilter_' + field).tryGetWidget(Widget);\r\n                        if (widget == null) {\r\n                            return;\r\n                        }\r\n\r\n                        var state = settings.quickFilters[field];\r\n                        var loadState = $(e).data('qfloadstate');\r\n                        if (loadState != null) {\r\n                            loadState(widget, state);\r\n                        }\r\n                        else {\r\n                            Serenity.EditorUtils.setValue(widget, state);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (flags.quickSearch === true && (settings.quickSearchField != null || settings.quickSearchText != null)) {\r\n                    var qsInput = this.toolbar.element.find('.s-QuickSearchInput').first();\r\n                    if (qsInput.length > 0) {\r\n                        var qsWidget = qsInput.tryGetWidget(Serenity.QuickSearchInput);\r\n                        if (qsWidget != null) {\r\n                            this.view.populateLock();\r\n                            try {\r\n                                qsWidget.element.addClass('ignore-change');\r\n                                try {\r\n                                    if (settings.quickSearchField != null) {\r\n                                        qsWidget.set_field(settings.quickSearchField);\r\n                                    }\r\n                                    if (settings.quickSearchText != null &&\r\n                                        Q.trimToNull(settings.quickSearchText) !== Q.trimToNull(qsWidget.element.val())) {\r\n                                        qsWidget.element.val(settings.quickSearchText);\r\n                                    }\r\n                                }\r\n                                finally {\r\n                                    qsWidget.element.removeClass('ignore-change');\r\n                                    qsWidget.element.triggerHandler('execute-search');\r\n                                }\r\n                            }\r\n                            finally {\r\n                                this.view.populateUnlock();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                this.restoringSettings--;\r\n                this.view.endUpdate();\r\n            }\r\n        }\r\n\r\n        protected persistSettings(flags?: GridPersistanceFlags): void {\r\n            var storage = this.getPersistanceStorage();\r\n            if (!storage) {\r\n                return;\r\n            }\r\n\r\n            var settings = this.getCurrentSettings(flags);\r\n            storage.setItem(this.getPersistanceKey(), $.toJSON(settings));\r\n        }\r\n\r\n        protected getCurrentSettings(flags?: GridPersistanceFlags) {\r\n            flags = flags || this.gridPersistanceFlags();\r\n            var settings: PersistedGridSettings = {};\r\n            if (flags.columnVisibility !== false || flags.columnWidths !== false || flags.sortColumns !== false) {\r\n                settings.columns = [];\r\n                var sortColumns = this.slickGrid.getSortColumns() as any[];\r\n                var columns = this.slickGrid.getColumns();\r\n                for (var column of columns) {\r\n                    var p: PersistedGridColumn = {\r\n                        id: column.id\r\n                    };\r\n\r\n                    if (flags.columnVisibility !== false) {\r\n                        p.visible = true;\r\n                    }\r\n                    if (flags.columnWidths !== false) {\r\n                        p.width = column.width;\r\n                    }\r\n\r\n                    if (flags.sortColumns !== false) {\r\n                        var sort = Q.indexOf(sortColumns, x => x.columnId == column.id);\r\n                        p.sort = ((sort >= 0) ? ((sortColumns[sort].sortAsc !== false) ? (sort + 1) : (-sort - 1)) : 0);\r\n                    }\r\n                    settings.columns.push(p);\r\n                }\r\n            }\r\n\r\n            if (flags.includeDeleted !== false) {\r\n                settings.includeDeleted = this.element.find('.s-IncludeDeletedToggle').hasClass('pressed');\r\n            }\r\n\r\n            if (flags.filterItems !== false && (this.filterBar != null) && (this.filterBar.get_store() != null)) {\r\n                settings.filterItems = this.filterBar.get_store().get_items().slice();\r\n            }\r\n\r\n            if (flags.quickSearch === true) {\r\n                var qsInput = this.toolbar.element.find('.s-QuickSearchInput').first();\r\n                if (qsInput.length > 0) {\r\n                    var qsWidget = qsInput.tryGetWidget(Serenity.QuickSearchInput);\r\n                    if (qsWidget != null) {\r\n                        settings.quickSearchField = qsWidget.get_field();\r\n                        settings.quickSearchText = qsWidget.element.val();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (flags.quickFilters !== false && (this.quickFiltersDiv != null) && this.quickFiltersDiv.length > 0) {\r\n                settings.quickFilters = {};\r\n                this.quickFiltersDiv.find('.quick-filter-item').each((i, e) => {\r\n                    var field = $(e).data('qffield');\r\n                    if (Q.isEmptyOrNull(field)) {\r\n                        return;\r\n                    }\r\n\r\n                    var widget = $('#' + this.uniqueName + '_QuickFilter_' + field).tryGetWidget(Widget);\r\n                    if (widget == null) {\r\n                        return;\r\n                    }\r\n\r\n                    var saveState = $(e).data('qfsavestate');\r\n                    var state = (saveState != null) ? saveState(widget) : Serenity.EditorUtils.getValue(widget);\r\n                    settings.quickFilters[field] = state;\r\n                    if (flags.quickFilterText === true && $(e).hasClass('quick-filter-active')) {\r\n\r\n                        var getDisplayText = $(e).data('qfdisplaytext');\r\n                        var filterLabel = $(e).find('.quick-filter-label').text();\r\n\r\n                        var displayText;\r\n                        if (getDisplayText != null) {\r\n                            displayText = getDisplayText(widget, filterLabel);\r\n                        }\r\n                        else {\r\n                            displayText = filterLabel + ' = ' + Serenity.EditorUtils.getDisplayText(widget);\r\n                        }\r\n\r\n                        if (!Q.isEmptyOrNull(displayText)) {\r\n                            if (!Q.isEmptyOrNull(settings.quickFilterText)) {\r\n                                settings.quickFilterText += ' ' + Q.coalesce(Q.tryGetText('Controls.FilterPanel.And'), 'and') + ' ';\r\n                                settings.quickFilterText += displayText;\r\n                            }\r\n                            else {\r\n                                settings.quickFilterText = displayText;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return settings;\r\n        }\r\n\r\n        getElement(): JQuery {\r\n            return this.element;\r\n        }\r\n\r\n        getGrid(): Slick.Grid {\r\n            return this.slickGrid;\r\n        }\r\n\r\n        getView(): Slick.RemoteView<TItem> {\r\n            return this.view;\r\n        }\r\n\r\n        getFilterStore(): FilterStore {\r\n            return (this.filterBar == null) ? null : this.filterBar.get_store();\r\n        }\r\n    }\r\n}\r\n","\r\nnamespace Serenity {\r\n\r\n    @Decorators.registerClass()\r\n    @Decorators.resizable()\r\n    @Decorators.responsive()\r\n    export class ColumnPickerDialog extends Serenity.TemplatedDialog<any> {\r\n\r\n        private ulVisible: JQuery;\r\n        private ulHidden: JQuery;\r\n        private colById: Q.Dictionary<Slick.Column>;\r\n\r\n        public allColumns: Slick.Column[];\r\n        public visibleColumns: string[];\r\n        public defaultColumns: string[];\r\n        public done: () => void;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            new Serenity.QuickSearchInput(this.byId(\"Search\"), {\r\n                onSearch: (fld, txt, done) => {\r\n                    txt = Q.trimToNull(txt);\r\n                    if (txt != null)\r\n                        txt = Select2.util.stripDiacritics(txt.toLowerCase());\r\n\r\n                    this.element.find('li').each((x, e) => {\r\n                        $(e).toggle(!txt || Select2.util.stripDiacritics(\r\n                            $(e).text().toLowerCase()).indexOf(txt) >= 0);\r\n                    });\r\n                    done && done(true);\r\n                }\r\n            });\r\n\r\n            this.ulVisible = this.byId(\"VisibleCols\");\r\n            this.ulHidden = this.byId(\"HiddenCols\");\r\n            this.dialogTitle = Q.text(\"Controls.ColumnPickerDialog.Title\");\r\n        }\r\n\r\n        public static createToolButton(grid: DataGrid<any, any>): ToolButton {\r\n            function onClick() {\r\n                var picker = new Serenity.ColumnPickerDialog();\r\n                picker.allColumns = (grid as any).allColumns;\r\n                if ((grid as any).initialSettings) {\r\n                    var initialSettings = (grid as any).initialSettings as PersistedGridSettings;\r\n                    if (initialSettings.columns && initialSettings.columns.length)\r\n                        picker.defaultColumns = initialSettings.columns.map(x => x.id);\r\n                }\r\n                picker.visibleColumns = grid.slickGrid.getColumns().map(x => x.id);\r\n                picker.done = () => {\r\n                    (grid as any).allColumns = picker.allColumns;\r\n                    var visible = picker.allColumns.filter(x => x.visible === true);\r\n                    grid.slickGrid.setColumns(visible);\r\n                    (grid as any).persistSettings();\r\n                    grid.refresh();\r\n                };\r\n\r\n                Q[\"Router\"] && Q[\"Router\"].dialog && Q[\"Router\"].dialog(grid.element, picker.element, () => \"columns\");\r\n                picker.dialogOpen();\r\n            }\r\n\r\n            grid.element.on('handleroute.' + (grid as any).uniqueName, (e, arg) => {\r\n                if (arg && !arg.handled && arg.route == \"columns\") {\r\n                    onClick();\r\n                }\r\n            });\r\n\r\n            return {\r\n                hint: Q.text(\"Controls.ColumnPickerDialog.Title\"),\r\n                cssClass: \"column-picker-button\",\r\n                onClick: onClick\r\n            }\r\n        }\r\n\r\n        protected getDialogButtons() {\r\n            return [\r\n                {\r\n                    text: Q.text(\"Controls.ColumnPickerDialog.RestoreDefaults\"),\r\n                    click: () => {\r\n                        let liByKey: Q.Dictionary<JQuery> = {};\r\n                        this.ulVisible.children().add(this.ulHidden.children()).each((x, e) => {\r\n                            let el = $(e);\r\n                            liByKey[el.data('key')] = el;\r\n                        });\r\n\r\n                        let last: JQuery = null;\r\n                        for (let id of this.defaultColumns) {\r\n                            let li = liByKey[id];\r\n                            if (!li)\r\n                                continue;\r\n\r\n                            if (last == null)\r\n                                li.prependTo(this.ulVisible);\r\n                            else\r\n                                li.insertAfter(last);\r\n\r\n                            last = li;\r\n                            let key: string = li.data('key');\r\n                            delete liByKey[key];\r\n                        }\r\n\r\n                        for (let key in liByKey)\r\n                            liByKey[key].appendTo(this.ulHidden);\r\n\r\n                        this.updateListStates();\r\n                    }\r\n                },\r\n                {\r\n                    text: Q.text(\"Dialogs.OkButton\"),\r\n                    click: () => {\r\n                        let newColumns: Slick.Column[] = [];\r\n\r\n                        for (var col of this.allColumns)\r\n                            col.visible = false;\r\n\r\n                        this.visibleColumns = this.ulVisible.children().toArray().map(x => {\r\n                            let id = $(x).data(\"key\");\r\n                            var col = this.colById[id];\r\n                            col.visible = true;\r\n                            newColumns.push(col);\r\n                            return id;\r\n                        });\r\n\r\n                        for (var col of this.allColumns) {\r\n                            if (!col.visible)\r\n                                newColumns.push(col);\r\n                        }\r\n\r\n                        this.allColumns = newColumns;\r\n                        this.done && this.done();\r\n                        this.dialogClose()\r\n                    }\r\n                },\r\n                {\r\n                    text: Q.text(\"Dialogs.CancelButton\"),\r\n                    click: () => {\r\n                        this.dialogClose()\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n\r\n        protected getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n            opt.width = 600;\r\n            return opt;\r\n        }\r\n\r\n        private getTitle(col: Slick.Column) {\r\n            if (col.id == \"__select__\")\r\n                return \"[x]\";\r\n\r\n            return col.name || col.toolTip || col.id;\r\n        }\r\n\r\n        private allowHide(col: Slick.Column): boolean {\r\n            return col.sourceItem == null || col.sourceItem.allowHide == null || col.sourceItem.allowHide;\r\n        }\r\n\r\n        private createLI(col: Slick.Column): JQuery {\r\n            var allowHide = this.allowHide(col);\r\n            return $(`\r\n<li data-key=\"${col.id}\" class=\"${allowHide ? \"\" : \"cant-hide\"}\">\r\n  <span class=\"drag-handle\">☰</span>\r\n  ${ Q.htmlEncode(this.getTitle(col)) }\r\n  ${ allowHide ? `<i class=\"js-hide\" title=\"${ Q.text(\"Controls.ColumnPickerDialog.HideHint\") }\">✖</i>` : '' }\r\n  <i class=\"js-show fa fa-eye\" title=\"${ Q.text(\"Controls.ColumnPickerDialog.ShowHint\") }\"></i>\r\n</li>`);\r\n        }\r\n\r\n        private updateListStates() {\r\n            this.ulVisible.children().removeClass(\"bg-info\").addClass(\"bg-success\");\r\n            this.ulHidden.children().removeClass(\"bg-success\").addClass(\"bg-info\");\r\n        }\r\n\r\n        protected setupColumns(): void {\r\n            this.allColumns = this.allColumns || [];\r\n            this.visibleColumns = this.visibleColumns || [];\r\n\r\n            let visible: Q.Dictionary<boolean> = {};\r\n            for (let id of this.visibleColumns) {\r\n                visible[id] = true;\r\n            }\r\n\r\n            this.colById = {};\r\n            for (let c of this.allColumns) {\r\n                this.colById[c.id] = c;\r\n            }\r\n\r\n            if (this.defaultColumns == null)\r\n                this.defaultColumns = this.visibleColumns.slice(0);\r\n\r\n            let hidden: Slick.Column[] = [];\r\n\r\n            for (let c of this.allColumns) {\r\n                if (!visible[c.id] && (!c.sourceItem ||\r\n                    (c.sourceItem.filterOnly !== true &&\r\n                        (c.sourceItem.readPermission == null || Q.Authorization.hasPermission(c.sourceItem.readPermission))))) {\r\n                    hidden.push(c);\r\n                }\r\n            }\r\n\r\n            let hiddenColumns = hidden.sort((a, b) => Q.Culture.stringCompare(this.getTitle(a), this.getTitle(b)));\r\n\r\n            for (let id of this.visibleColumns) {\r\n                var c = this.colById[id];\r\n                if (!c)\r\n                    continue;\r\n\r\n                this.createLI(c).appendTo(this.ulVisible);\r\n            }\r\n\r\n            for (let c of hiddenColumns) {\r\n                this.createLI(c).appendTo(this.ulHidden);\r\n            }\r\n\r\n            this.updateListStates();\r\n\r\n            if (typeof Sortable !== \"undefined\" &&\r\n                Sortable.create) {\r\n\r\n                Sortable.create(this.ulVisible[0], {\r\n                    group: this.uniqueName + \"_group\",\r\n                    filter: '.js-hide',\r\n                    onFilter: evt => {\r\n                        $(evt.item).appendTo(this.ulHidden);\r\n                        this.updateListStates();\r\n                    },\r\n                    onMove: x => {\r\n                        if ($(x.dragged).hasClass('cant-hide') &&\r\n                            x.from == this.ulVisible[0] &&\r\n                            x.to !== x.from)\r\n                            return false;\r\n                        return true;\r\n                    },\r\n                    onEnd: evt => this.updateListStates()\r\n                });\r\n\r\n                Sortable.create(this.ulHidden[0], {\r\n                    group: this.uniqueName + \"_group\",\r\n                    sort: false,\r\n                    filter: '.js-show',\r\n                    onFilter: evt => {\r\n                        $(evt.item).appendTo(this.ulVisible);\r\n                        this.updateListStates();\r\n                    },\r\n                    onEnd: evt => this.updateListStates()\r\n                });\r\n            }\r\n        }\r\n\r\n        protected onDialogOpen(): void {\r\n            super.onDialogOpen();\r\n            this.element.find(\"input\").removeAttr(\"disabled\")\r\n            this.element.closest('.ui-dialog').children(\".ui-dialog-buttonpane\")\r\n                .find('button').eq(0).addClass(\"restore-defaults\")\r\n                .next().focus();\r\n\r\n            this.setupColumns();\r\n            Q.centerDialog(this.element);\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return `\r\n<div class=\"search\"><input id=\"~_Search\" type=\"text\" disabled /></div>\r\n<div class=\"columns-container\">\r\n<div class=\"column-list visible-list bg-success\">\r\n  <h5><i class=\"fa fa-eye\"></i> ${ Q.text(\"Controls.ColumnPickerDialog.VisibleColumns\") }</h5>\r\n  <ul id=\"~_VisibleCols\"></ul>\r\n</div>\r\n<div class=\"column-list hidden-list bg-info\">\r\n  <h5><i class=\"fa fa-list\"></i> ${ Q.text(\"Controls.ColumnPickerDialog.HiddenColumns\") }</h5>\r\n  <ul id=\"~_HiddenCols\"></ul>\r\n</div>\r\n</div>`;\r\n        }\r\n    }\r\n}\r\n","namespace Serenity {\r\n\r\n    @Decorators.registerClass('Serenity.EntityGrid')\r\n    export class EntityGrid<TItem, TOptions> extends DataGrid<TItem, TOptions> {\r\n\r\n        constructor(container: JQuery, options?: TOptions) {\r\n            super(container, options);\r\n\r\n            this.element.addClass('route-handler')\r\n                .on('handleroute.' + this.uniqueName, (e: JQueryEventObject, arg: any) => {\r\n                    if (!!arg.handled)\r\n                        return;\r\n\r\n                    if (!!(arg.route === 'new')) {\r\n                        arg.handled = true;\r\n                        this.addButtonClick();\r\n                        return;\r\n                    }\r\n\r\n                    var parts = arg.route.split('/');\r\n                    if (!!(parts.length === 2 && parts[0] === 'edit')) {\r\n                        arg.handled = true;\r\n                        this.editItem(parts[1]);\r\n                        return;\r\n                    }\r\n\r\n                    if (!!(parts.length === 2 && parts[1] === 'new')) {\r\n                        arg.handled = true;\r\n                        this.editItemOfType(Q.cast(parts[0], String), null);\r\n                        return;\r\n                    }\r\n\r\n                    if (!!(parts.length === 3 && parts[1] === 'edit')) {\r\n                        arg.handled = true;\r\n                        this.editItemOfType(Q.cast(parts[0], String), parts[2]);\r\n                    }\r\n                });\r\n        }\r\n\r\n        protected usePager(): boolean {\r\n            return true;\r\n        }\r\n\r\n        protected createToolbarExtensions(): void {\r\n            this.createIncludeDeletedButton();\r\n            this.createQuickSearchInput();\r\n        }\r\n\r\n        protected getInitialTitle(): string {\r\n            return this.getDisplayName();\r\n        }\r\n\r\n        protected getLocalTextPrefix(): string {\r\n            var result = super.getLocalTextPrefix();\r\n\r\n            if (Q.isEmptyOrNull(result)) {\r\n                return this.getEntityType();\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        private entityType: string;\r\n\r\n        protected getEntityType(): string {\r\n            if (this.entityType != null)\r\n                return this.entityType;\r\n\r\n            var attr = this.attrs(EntityTypeAttribute);\r\n\r\n            if (attr.length === 1) {\r\n                return (this.entityType = attr[0].value);\r\n            }\r\n\r\n            var name = Q.getTypeFullName(Q.getInstanceType(this));\r\n\r\n            var px = name.indexOf('.');\r\n            if (px >= 0) {\r\n                name = name.substring(px + 1);\r\n            }\r\n\r\n            if (Q.endsWith(name, 'Grid')) {\r\n                name = name.substr(0, name.length - 4);\r\n            }\r\n            else if (Q.endsWith(name, 'SubGrid')) {\r\n                name = name.substr(0, name.length - 7);\r\n            }\r\n\r\n            this.entityType = name;\r\n\r\n            return this.entityType;\r\n        }\r\n\r\n        private displayName: string;\r\n\r\n        protected getDisplayName(): string {\r\n            if (this.displayName != null)\r\n                return this.displayName;\r\n\r\n            var attr = this.attrs(System.ComponentModel.DisplayNameAttribute);\r\n            if (attr.length >= 1) {\r\n                this.displayName = attr[0].displayName;\r\n                this.displayName = Q.LT.getDefault(this.displayName, this.displayName);\r\n            }\r\n            else {\r\n                this.displayName = Q.tryGetText(this.getLocalTextDbPrefix() + 'EntityPlural');\r\n                if (this.displayName == null)\r\n                    this.displayName = this.getEntityType();\r\n            }\r\n\r\n            return this.displayName;\r\n        }\r\n\r\n        private itemName: string;\r\n\r\n        protected getItemName(): string {\r\n            if (this.itemName != null)\r\n                return this.itemName;\r\n\r\n            var attr = this.attrs(ItemNameAttribute);\r\n            if (attr.length >= 1) {\r\n                this.itemName = attr[0].value;\r\n                this.itemName = Q.LT.getDefault(this.itemName, this.itemName);\r\n            }\r\n            else {\r\n                this.itemName = Q.tryGetText(this.getLocalTextDbPrefix() + 'EntitySingular');\r\n                if (this.itemName == null)\r\n                    this.itemName = this.getEntityType();\r\n            }\r\n\r\n            return this.itemName;\r\n        }\r\n\r\n        protected getAddButtonCaption(): string {\r\n            return Q.format(Q.text('Controls.EntityGrid.NewButton'), this.getItemName());\r\n        }\r\n\r\n        protected getButtons(): ToolButton[] {\r\n\r\n            var buttons: ToolButton[] = [];\r\n            buttons.push({\r\n                title: this.getAddButtonCaption(),\r\n                cssClass: 'add-button',\r\n                hotkey: 'alt+n',\r\n                onClick: () => {\r\n                    this.addButtonClick();\r\n                },\r\n                disabled: () => !this.hasInsertPermission() || this.readOnly\r\n             });\r\n\r\n            buttons.push(this.newRefreshButton(true));\r\n            buttons.push(Serenity.ColumnPickerDialog.createToolButton(this as any));\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected newRefreshButton(noText?: boolean): ToolButton {\r\n            return {\r\n                title: (noText ? null : Q.text('Controls.EntityGrid.RefreshButton')),\r\n                hint: (noText ? Q.text('Controls.EntityGrid.RefreshButton') : null),\r\n                cssClass: 'refresh-button',\r\n                onClick: () => {\r\n                    this.refresh();\r\n                }\r\n            };\r\n        }\r\n\r\n        protected addButtonClick(): void {\r\n            this.editItem(new Object());\r\n        }\r\n\r\n        protected editItem(entityOrId: any): void {\r\n            this.createEntityDialog(this.getItemType(), dlg => {\r\n                var dialog = Q.safeCast(dlg, Serenity['IEditDialog']);\r\n                if (dialog != null) {\r\n                    dialog.load(entityOrId, () => {\r\n                        dialog.dialogOpen(this.openDialogsAsPanel);\r\n                    });\r\n\r\n                    return;\r\n                }\r\n\r\n                throw new Error(\r\n                    Q.format(\"{0} doesn't implement IEditDialog!\",\r\n                        Q.getTypeFullName(Q.getInstanceType(dlg))));\r\n            });\r\n        }\r\n\r\n        protected editItemOfType(itemType: string, entityOrId: any): void {\r\n\r\n            if (itemType === this.getItemType()) {\r\n                this.editItem(entityOrId);\r\n                return;\r\n            }\r\n\r\n            this.createEntityDialog(itemType, dlg => {\r\n                var dialog = Q.safeCast(dlg, Serenity['IEditDialog']);\r\n                if (dialog != null) {\r\n                    dialog.load(entityOrId, () =>\r\n                        dialog.dialogOpen(this.openDialogsAsPanel));\r\n                    return;\r\n                }\r\n\r\n                throw new Error(\r\n                    Q.format(\"{0} doesn't implement IEditDialog!\",\r\n                        Q.getTypeFullName(Q.getInstanceType(dlg))));\r\n            });\r\n        }\r\n\r\n        private service: string;\r\n\r\n        protected getService(): string {\r\n            if (this.service != null)\r\n                return this.service;\r\n\r\n            var attr = this.attrs(ServiceAttribute);\r\n            if (attr.length >= 1)\r\n                this.service = attr[0].value;\r\n            else\r\n                this.service = Q.replaceAll(this.getEntityType(), '.', '/');\r\n\r\n            return this.service;\r\n        }\r\n\r\n        protected getViewOptions(): Slick.RemoteViewOptions {\r\n            var opt = super.getViewOptions();\r\n            opt.url = Q.resolveUrl('~/Services/' + this.getService() + '/List');\r\n            return opt;\r\n        }\r\n\r\n        protected getItemType() {\r\n            return this.getEntityType();\r\n        }\r\n\r\n        protected routeDialog(itemType: string, dialog: Widget<any>) {\r\n            Q[\"Router\"] && Q[\"Router\"].dialog && Q[\"Router\"].dialog(this.element, dialog.element, () => {\r\n                var hash = '';\r\n\r\n                if (itemType !== this.getItemType())\r\n                    hash = itemType + '/';\r\n\r\n                if (!!(dialog != null && (dialog as any).entityId != null))\r\n                    hash += 'edit/' + (dialog as any).entityId.toString();\r\n                else\r\n                    hash += 'new';\r\n\r\n                return hash;\r\n            });\r\n        }\r\n\r\n        protected getInsertPermission(): string {\r\n            return null;\r\n        }\r\n\r\n        protected hasInsertPermission(): boolean {\r\n            var insertPermission = this.getInsertPermission();\r\n            return insertPermission == null || Q.Authorization.hasPermission(this.getInsertPermission());\r\n        }\r\n\r\n        protected transferDialogReadOnly(dialog: Widget<any>) {\r\n            if (this.readOnly)\r\n                Serenity.EditorUtils.setReadOnly(dialog, true);\r\n        }\r\n\r\n        protected initDialog(dialog: Widget<any>): void {\r\n            Serenity.SubDialogHelper.bindToDataChange(dialog, this, (e, dci) => {\r\n                this.subDialogDataChange();\r\n            }, true);\r\n\r\n            this.transferDialogReadOnly(dialog);\r\n            this.routeDialog(this.getItemType(), dialog);\r\n        }\r\n\r\n        protected initEntityDialog(itemType: string, dialog: Widget<any>): void {\r\n            if (itemType === this.getItemType()) {\r\n                this.initDialog(dialog);\r\n                return;\r\n            }\r\n\r\n            Serenity.SubDialogHelper.bindToDataChange(dialog, this, (e, dci) => {\r\n                this.subDialogDataChange();\r\n            }, true);\r\n\r\n            this.transferDialogReadOnly(dialog);\r\n            this.routeDialog(itemType, dialog);\r\n        }\r\n\r\n        protected createEntityDialog(itemType: string, callback?: (dlg: Widget<any>) => void): Widget<any> {\r\n            var dialogClass = this.getDialogTypeFor(itemType);\r\n            var dialog = Serenity.Widget.create({\r\n                type: dialogClass,\r\n                options: this.getDialogOptionsFor(itemType),\r\n                init: d => {\r\n                    this.initEntityDialog(itemType, d);\r\n                    callback && callback(d);\r\n                }\r\n            });\r\n\r\n            return dialog;\r\n        }\r\n\r\n        protected getDialogOptions(): JQueryUI.DialogOptions {\r\n            return {};\r\n        }\r\n\r\n        protected getDialogOptionsFor(itemType: string): JQueryUI.DialogOptions {\r\n            if (itemType === this.getItemType())\r\n                return this.getDialogOptions();\r\n\r\n            return {};\r\n        }\r\n\r\n        protected getDialogTypeFor(itemType: string): { new(...args: any[]): Widget<any> } {\r\n\r\n            if (itemType === this.getItemType()) {\r\n                return this.getDialogType();\r\n            }\r\n\r\n            return Serenity.DialogTypeRegistry.get(itemType) as any;\r\n        }\r\n\r\n        private dialogType: WidgetDialogClass;\r\n\r\n        protected getDialogType(): { new(...args: any[]): Widget<any> } {\r\n\r\n            if (this.dialogType != null)\r\n                return this.dialogType;\r\n\r\n            var attr = this.attrs(DialogTypeAttribute);\r\n            if (attr.length >= 1)\r\n                this.dialogType = attr[0].value;\r\n            else\r\n                this.dialogType = Serenity.DialogTypeRegistry.get(this.getEntityType());\r\n\r\n            return this.dialogType;\r\n        }\r\n    }\r\n}","namespace Serenity {\r\n\r\n    /**\r\n     * A mixin that can be applied to a DataGrid for tree functionality\r\n     */\r\n    export class TreeGridMixin<TItem> {\r\n\r\n        private dataGrid: DataGrid<TItem, any>;\r\n        private getId: (item: TItem) => any;\r\n\r\n        constructor(private options: TreeGridMixinOptions<TItem>) {\r\n            var dg = this.dataGrid = options.grid;\r\n            var idProperty = (dg as any).getIdProperty();\r\n            var getId = this.getId = (item: TItem) => (item as any)[idProperty];\r\n\r\n            dg.element.find('.grid-container').on('click', e => {\r\n                if ($(e.target).hasClass('s-TreeToggle')) {\r\n                    var src = dg.slickGrid.getCellFromEvent(e);\r\n                    if (src.cell >= 0 &&\r\n                        src.row >= 0) {\r\n                        SlickTreeHelper.toggleClick<TItem>(e, src.row, src.row, dg.view, getId);\r\n                    }\r\n                }\r\n            });\r\n\r\n            var oldViewFilter = (dg as any).onViewFilter;\r\n            (dg as any).onViewFilter = function (item: TItem) {\r\n                if (!oldViewFilter.apply(this, [item]))\r\n                    return false;\r\n\r\n                return SlickTreeHelper.filterById(item, dg.view, options.getParentId);\r\n            };\r\n\r\n            var oldProcessData = (dg as any).onViewProcessData;\r\n            (dg as any).onViewProcessData = function (response: ListResponse<TItem>) {\r\n\r\n                response = oldProcessData.apply(this, [response]);\r\n                response.Entities = TreeGridMixin.applyTreeOrdering(response.Entities, getId, options.getParentId);\r\n                SlickTreeHelper.setIndents(response.Entities, getId, options.getParentId,\r\n                    (options.initialCollapse && options.initialCollapse()) || false);\r\n                return response;\r\n            };\r\n\r\n            if (options.toggleField) {\r\n                var col = Q.tryFirst(dg['allColumns'] || dg.slickGrid.getColumns() || [], x => x.field == options.toggleField);\r\n                if (col) {\r\n                    col.format = SlickFormatting.treeToggle(() => dg.view, getId,\r\n                        col.format || (ctx => Q.htmlEncode(ctx.value)));\r\n                    col.formatter = SlickHelper.convertToFormatter(col.format);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Expands / collapses all rows in a grid automatically\r\n         */\r\n        toggleAll(): void {\r\n            SlickTreeHelper.setCollapsed(this.dataGrid.view.getItems(),\r\n                !this.dataGrid.view.getItems().every(x => (x as any)._collapsed == true));\r\n\r\n            this.dataGrid.view.setItems(this.dataGrid.view.getItems(), true);\r\n        }\r\n\r\n        collapseAll(): void {\r\n            SlickTreeHelper.setCollapsed(this.dataGrid.view.getItems(), true);\r\n            this.dataGrid.view.setItems(this.dataGrid.view.getItems(), true);\r\n        }\r\n        \r\n        expandAll(): void {\r\n            SlickTreeHelper.setCollapsed(this.dataGrid.view.getItems(), false);\r\n            this.dataGrid.view.setItems(this.dataGrid.view.getItems(), true);\r\n        }\r\n        \r\n        /**\r\n         * Reorders a set of items so that parents comes before their children.\r\n         * This method is required for proper tree ordering, as it is not so easy to perform with SQL.\r\n         * @param items list of items to be ordered\r\n         * @param getId a delegate to get ID of a record (must return same ID with grid identity field)\r\n         * @param getParentId a delegate to get parent ID of a record\r\n         */\r\n        static applyTreeOrdering<TItem>(items: TItem[], getId: (item: TItem) => any, getParentId: (item: TItem) => any): TItem[] {\r\n            var result: TItem[] = [];\r\n\r\n            var byId = Q.toGrouping(items, getId);\r\n            var byParentId = Q.toGrouping(items, getParentId);\r\n            var visited = {};\r\n\r\n            function takeChildren(theParentId: any) {\r\n                if (visited[theParentId])\r\n                    return;\r\n\r\n                visited[theParentId] = true;\r\n                for (var child of (byParentId[theParentId] || [])) {\r\n                    result.push(child);\r\n                    takeChildren(getId(child));\r\n                }\r\n            }\r\n\r\n            for (var item of items)\r\n            {\r\n                var parentId = getParentId(item);\r\n                if (parentId == null ||\r\n                    !((byId[parentId] || []).length)) {\r\n                    result.push(item);\r\n                    takeChildren(getId(item));\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    export interface TreeGridMixinOptions<TItem> {\r\n        // data grid object\r\n        grid: Serenity.DataGrid<TItem, any>;\r\n        // a function to get parent id\r\n        getParentId: (item: TItem) => any;\r\n        // where should the toggle button be placed\r\n        toggleField: string;\r\n        // a delegate that should return initial collapsing state\r\n        initialCollapse?: () => boolean;\r\n    }\r\n}\r\n","namespace Serenity {\r\n\r\n    export interface CheckTreeItem<TSource> {\r\n        isSelected?: boolean;\r\n        hideCheckBox?: boolean;\r\n        isAllDescendantsSelected?: boolean;\r\n        id?: string;\r\n        text?: string;\r\n        parentId?: string;\r\n        children?: CheckTreeItem<TSource>[];\r\n        source?: TSource;\r\n    }\r\n\r\n    @Serenity.Decorators.registerEditor('Serenity.CheckTreeEditor', [IGetEditValue, ISetEditValue, IReadOnly])\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    export class CheckTreeEditor<TItem extends CheckTreeItem<any>, TOptions> extends DataGrid<TItem, TOptions>\r\n        implements IGetEditValue, ISetEditValue, IReadOnly {\r\n\r\n        private byId: Q.Dictionary<TItem>;\r\n\r\n        constructor(div: JQuery, opt?: TOptions) {\r\n            super(div, opt);\r\n\r\n            div.addClass('s-CheckTreeEditor');\r\n            this.updateItems();\r\n        }\r\n\r\n        protected getIdProperty() {\r\n            return \"id\";\r\n        }\r\n\r\n        protected getTreeItems(): TItem[] {\r\n            return [];\r\n        }\r\n\r\n        protected updateItems(): void {\r\n            var items = this.getTreeItems();\r\n            var itemById = {};\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                item.children = [];\r\n                if (!Q.isEmptyOrNull(item.id)) {\r\n                    itemById[item.id] = item;\r\n                }\r\n                if (!Q.isEmptyOrNull(item.parentId)) {\r\n                    var parent = itemById[item.parentId];\r\n                    if (parent != null) {\r\n                        parent.children.push(item);\r\n                    }\r\n                }\r\n            }\r\n            this.view.addData({ Entities: items, Skip: 0, Take: 0, TotalCount: items.length });\r\n            this.updateSelectAll();\r\n            this.updateFlags();\r\n        }\r\n\r\n        getEditValue(property: PropertyItem, target: any): void {\r\n            if (this.getDelimited())\r\n                target[property.name] = this.get_value().join(\",\");\r\n            else\r\n                target[property.name] = this.get_value();\r\n        }\r\n\r\n        setEditValue(source: any, property: PropertyItem): void {\r\n            var value = source[property.name];\r\n            this.set_value(value);\r\n        }\r\n\r\n        protected getButtons(): ToolButton[] {\r\n            var selectAllText = this.getSelectAllText();\r\n            if (Q.isEmptyOrNull(selectAllText)) {\r\n                return null;\r\n            }\r\n\r\n            var self = this;\r\n            var buttons: ToolButton[] = [];\r\n            buttons.push(Serenity.GridSelectAllButtonHelper.define(function () {\r\n                return self;\r\n            }, function (x) {\r\n                return x.id;\r\n            }, function (x1) {\r\n                return x1.isSelected;\r\n            }, (x2, v) => {\r\n                if (x2.isSelected !== v) {\r\n                    x2.isSelected = v;\r\n                    this.itemSelectedChanged(x2);\r\n                }\r\n            }, null, () => {\r\n                this.updateFlags();\r\n            }));\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected itemSelectedChanged(item: TItem): void {\r\n        }\r\n\r\n        protected getSelectAllText(): string {\r\n            return Q.coalesce(Q.tryGetText('Controls.CheckTreeEditor.SelectAll'), 'Select All');\r\n        }\r\n\r\n        protected isThreeStateHierarchy(): boolean {\r\n            return false;\r\n        }\r\n\r\n        protected createSlickGrid(): Slick.Grid {\r\n            this.element.addClass('slick-no-cell-border').addClass('slick-no-odd-even');\r\n            var result = super.createSlickGrid();\r\n            this.element.addClass('slick-hide-header');\r\n            result.resizeCanvas();\r\n            return result;\r\n        }\r\n\r\n        protected onViewFilter(item: TItem): boolean {\r\n            if (!super.onViewFilter(item)) {\r\n                return false;\r\n            }\r\n\r\n            var items = this.view.getItems();\r\n            var self = this;\r\n            return Serenity.SlickTreeHelper.filterCustom(item, function (x) {\r\n                if (x.parentId == null) {\r\n                    return null;\r\n                }\r\n\r\n                if (self.byId == null) {\r\n                    self.byId = {};\r\n                    for (var i = 0; i < items.length; i++) {\r\n                        var o = items[i];\r\n                        if (o.id != null) {\r\n                            self.byId[o.id] = o;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return self.byId[x.parentId];\r\n            });\r\n        }\r\n\r\n        protected getInitialCollapse(): boolean {\r\n            return false;\r\n        }\r\n\r\n        protected onViewProcessData(response: ListResponse<TItem>): ListResponse<TItem> {\r\n            response = super.onViewProcessData(response);\r\n            this.byId = null;\r\n            Serenity.SlickTreeHelper.setIndents(response.Entities, function (x) {\r\n                return x.id;\r\n            }, function (x1) {\r\n                return x1.parentId;\r\n            }, this.getInitialCollapse());\r\n            return response;\r\n        }\r\n\r\n        protected onClick(e: JQueryEventObject, row: number, cell: number): void {\r\n            super.onClick(e, row, cell);\r\n\r\n            if (!e.isDefaultPrevented()) {\r\n                Serenity.SlickTreeHelper.toggleClick(e, row, cell, this.view, function (x) {\r\n                    return x.id;\r\n                });\r\n            }\r\n\r\n            if (e.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            var target = $(e.target);\r\n            if (target.hasClass('check-box')) {\r\n                e.preventDefault();\r\n\r\n                if (this._readOnly)\r\n                    return;\r\n\r\n                var checkedOrPartial = target.hasClass('checked') || target.hasClass('partial');\r\n                var item = this.itemAt(row);\r\n                var anyChanged = item.isSelected !== !checkedOrPartial;\r\n                this.view.beginUpdate();\r\n                try {\r\n                    if (item.isSelected !== !checkedOrPartial) {\r\n                        item.isSelected = !checkedOrPartial;\r\n                        this.view.updateItem(item.id, item);\r\n                        this.itemSelectedChanged(item);\r\n                    }\r\n                    anyChanged = this.setAllSubTreeSelected(item, item.isSelected) || anyChanged;\r\n                    this.updateSelectAll();\r\n                    this.updateFlags();\r\n                }\r\n                finally {\r\n                    this.view.endUpdate();\r\n                }\r\n                if (anyChanged) {\r\n                    this.element.triggerHandler('change');\r\n                }\r\n            }\r\n        }\r\n\r\n        protected updateSelectAll(): void {\r\n            Serenity.GridSelectAllButtonHelper.update(this, function (x) {\r\n                return x.isSelected;\r\n            });\r\n        }\r\n\r\n        protected updateFlags(): void {\r\n            var view = this.view;\r\n            var items = view.getItems();\r\n            var threeState = this.isThreeStateHierarchy();\r\n            if (!threeState) {\r\n                return;\r\n            }\r\n            view.beginUpdate();\r\n            try {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    if (item.children == null || item.children.length === 0) {\r\n                        var allsel = this.getDescendantsSelected(item);\r\n                        if (allsel !== item.isAllDescendantsSelected) {\r\n                            item.isAllDescendantsSelected = allsel;\r\n                            view.updateItem(item.id, item);\r\n                        }\r\n                        continue;\r\n                    }\r\n                    var allSelected = this.allDescendantsSelected(item);\r\n                    var selected = allSelected || this.anyDescendantsSelected(item);\r\n                    if (allSelected !== item.isAllDescendantsSelected || selected !== item.isSelected) {\r\n                        var selectedChange = item.isSelected !== selected;\r\n                        item.isAllDescendantsSelected = allSelected;\r\n                        item.isSelected = selected;\r\n                        view.updateItem(item.id, item);\r\n                        if (selectedChange) {\r\n                            this.itemSelectedChanged(item);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                view.endUpdate();\r\n            }\r\n        }\r\n\r\n        protected getDescendantsSelected(item: TItem): boolean {\r\n            return true;\r\n        }\r\n\r\n        protected setAllSubTreeSelected(item: TItem, selected: boolean): boolean {\r\n            var result = false;\r\n            for (var i = 0; i < item.children.length; i++) {\r\n                var sub = item.children[i];\r\n                if (sub.isSelected !== selected) {\r\n                    result = true;\r\n                    sub.isSelected = selected;\r\n                    this.view.updateItem(sub.id, sub as TItem);\r\n                    this.itemSelectedChanged(sub as TItem);\r\n                }\r\n                if (sub.children.length > 0) {\r\n                    result = this.setAllSubTreeSelected(sub as TItem, selected) || result;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        protected allItemsSelected() {\r\n            for (var i = 0; i < this.rowCount(); i++) {\r\n                var row = this.itemAt(i);\r\n                if (!row.isSelected) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return this.rowCount() > 0;\r\n        }\r\n\r\n        protected allDescendantsSelected(item: TItem): boolean {\r\n            if (item.children.length > 0) {\r\n                for (var i = 0; i < item.children.length; i++) {\r\n                    var sub = item.children[i];\r\n                    if (!sub.isSelected) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (!this.allDescendantsSelected(sub as TItem)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        protected getDelimited() {\r\n            return !!!!this.options['delimited'];\r\n        }\r\n\r\n        protected anyDescendantsSelected(item: TItem): boolean {\r\n            if (item.children.length > 0) {\r\n                for (var i = 0; i < item.children.length; i++) {\r\n                    var sub = item.children[i];\r\n                    if (sub.isSelected) {\r\n                        return true;\r\n                    }\r\n                    if (this.anyDescendantsSelected(sub as TItem)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n            var self = this;\r\n            var columns = [];\r\n            columns.push({\r\n                field: 'text', name: 'Kayıt', width: 80, format: Serenity.SlickFormatting.treeToggle(function () {\r\n                    return self.view;\r\n                }, function (x) {\r\n                    return x.id;\r\n                }, ctx => {\r\n                    var cls = 'check-box';\r\n                    var item = ctx.item;\r\n                    if (item.hideCheckBox) {\r\n                        return this.getItemText(ctx);\r\n                    }\r\n                    var threeState = this.isThreeStateHierarchy();\r\n                    if (item.isSelected) {\r\n                        if (threeState && !item.isAllDescendantsSelected) {\r\n                            cls += ' partial';\r\n                        }\r\n                        else {\r\n                            cls += ' checked';\r\n                        }\r\n                    }\r\n                    if (this._readOnly)\r\n                        cls += ' readonly';\r\n                    return '<span class=\"' + cls + '\"></span>' + this.getItemText(ctx);\r\n                })\r\n            });\r\n            return columns;\r\n        }\r\n\r\n        protected getItemText(ctx: Slick.FormatterContext): string {\r\n            return Q.htmlEncode(ctx.value);\r\n        }\r\n\r\n        protected getSlickOptions(): Slick.GridOptions {\r\n            var opt = super.getSlickOptions();\r\n            opt.forceFitColumns = true;\r\n            return opt;\r\n        }\r\n\r\n        protected sortItems(): void {\r\n            if (!this.moveSelectedUp()) {\r\n                return;\r\n            }\r\n            var oldIndexes = {};\r\n            var list = this.view.getItems();\r\n            var i = 0;\r\n            for (var $t1 = 0; $t1 < list.length; $t1++) {\r\n                var x = list[$t1];\r\n                oldIndexes[x.id] = i++;\r\n            }\r\n            list.sort(function (x1, y) {\r\n                if (x1.isSelected && !y.isSelected) {\r\n                    return -1;\r\n                }\r\n                if (y.isSelected && !x1.isSelected) {\r\n                    return 1;\r\n                }\r\n                var c = Q.Culture.stringCompare(x1.text, y.text);\r\n                if (c !== 0) {\r\n                    return c;\r\n                }\r\n                return oldIndexes[x1.id] < oldIndexes[y.id] ? -1 : (oldIndexes[x1.id] > oldIndexes[y.id] ? 1 : 0);\r\n            });\r\n\r\n            this.view.setItems(list, true);\r\n        }\r\n\r\n        protected moveSelectedUp(): boolean {\r\n            return false;\r\n        }\r\n\r\n        private _readOnly: boolean;\r\n\r\n        public get_readOnly() {\r\n            return this._readOnly;\r\n        }\r\n\r\n        public set_readOnly(value: boolean) {\r\n            if (!!this._readOnly != !!value) {\r\n                this._readOnly = !!value;\r\n                this.view.refresh();\r\n            }\r\n        }\r\n\r\n        private get_value(): string[] {\r\n            var list = [];\r\n            var items = this.view.getItems();\r\n            for (var i = 0; i < items.length; i++) {\r\n                if (items[i].isSelected) {\r\n                    list.push(items[i].id);\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n\r\n        public get value() {\r\n            return this.get_value();\r\n        }\r\n\r\n        private set_value(value: string | string[]) {\r\n\r\n            var selected = {};\r\n            if (value != null) {\r\n                if (typeof value == \"string\") {\r\n                    value = value.split(',')\r\n                        .map(x => Q.trimToNull(x))\r\n                        .filter(x => x != null);\r\n                }\r\n\r\n                for (var i = 0; i < value.length; i++) {\r\n                    selected[value[i]] = true;\r\n                }\r\n            }\r\n\r\n            this.view.beginUpdate();\r\n            try {\r\n                var items = this.view.getItems();\r\n                for (var i1 = 0; i1 < items.length; i1++) {\r\n                    var item = items[i1];\r\n                    var select = selected[item.id];\r\n                    if (select !== item.isSelected) {\r\n                        item.isSelected = select;\r\n                        this.view.updateItem(item.id, item);\r\n                    }\r\n                }\r\n                this.updateSelectAll();\r\n                this.updateFlags();\r\n                this.sortItems();\r\n            }\r\n            finally {\r\n                this.view.endUpdate();\r\n            }\r\n        }\r\n\r\n        public set value(v: string[]) {\r\n            this.set_value(v);\r\n        }\r\n    }\r\n\r\n    export interface CheckLookupEditorOptions {\r\n        lookupKey?: string;\r\n        checkedOnTop?: boolean;\r\n        showSelectAll?: boolean;\r\n        hideSearch?: boolean;\r\n        delimited?: boolean;\r\n        cascadeFrom?: string;\r\n        cascadeField?: string;\r\n        cascadeValue?: any;\r\n        filterField?: string;\r\n        filterValue?: any;\r\n    }\r\n\r\n    @Decorators.registerEditor(\"Serenity.CheckLookupEditor\")\r\n    export class CheckLookupEditor<TItem = any> extends CheckTreeEditor<Serenity.CheckTreeItem<TItem>, CheckLookupEditorOptions> {\r\n\r\n        private searchText: string;\r\n        private enableUpdateItems: boolean;\r\n\r\n        constructor(div: JQuery, options: CheckLookupEditorOptions) {\r\n            super(div, options);\r\n\r\n            this.enableUpdateItems = true;\r\n            this.setCascadeFrom(this.options.cascadeFrom);\r\n            this.updateItems();\r\n            Q.ScriptData.bindToChange('Lookup.' + this.getLookupKey(), this.uniqueName,\r\n                () => this.updateItems());\r\n        }\r\n\r\n        protected updateItems() {\r\n            if (this.enableUpdateItems)\r\n                super.updateItems();\r\n        }\r\n\r\n        protected getLookupKey() {\r\n            return this.options.lookupKey;\r\n        }\r\n\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n            return Q.coalesce(super.getButtons(), this.options.hideSearch ? null : []);\r\n        }\r\n\r\n        protected createToolbarExtensions() {\r\n            super.createToolbarExtensions();\r\n\r\n            Serenity.GridUtils.addQuickSearchInputCustom(this.toolbar.element, (field, text) => {\r\n                this.searchText = Select2.util.stripDiacritics(text || '').toUpperCase();\r\n                this.view.setItems(this.view.getItems(), true);\r\n            });\r\n        }\r\n\r\n        protected getSelectAllText(): string {\r\n            if (!this.options.showSelectAll)\r\n                return null;\r\n\r\n            return super.getSelectAllText();\r\n        }\r\n\r\n        protected cascadeItems(items: TItem[]) {\r\n\r\n            var val = this.get_cascadeValue();\r\n\r\n            if (val == null || val === '') {\r\n\r\n                if (!Q.isEmptyOrNull(this.get_cascadeField())) {\r\n                    return [];\r\n                }\r\n\r\n                return items;\r\n            }\r\n\r\n            var key = val.toString();\r\n            var fld = this.get_cascadeField();\r\n\r\n            return items.filter(x => {\r\n                var itemKey = Q.coalesce(x[fld], Serenity.ReflectionUtils.getPropertyValue(x, fld));\r\n                return !!(itemKey != null && itemKey.toString() === key);\r\n            });\r\n        }\r\n\r\n        protected filterItems(items: TItem[]) {\r\n            var val = this.get_filterValue();\r\n\r\n            if (val == null || val === '') {\r\n                return items;\r\n            }\r\n\r\n            var key = val.toString();\r\n            var fld = this.get_filterField();\r\n\r\n            return items.filter(x => {\r\n                var itemKey = Q.coalesce(x[fld], Serenity.ReflectionUtils.getPropertyValue(x, fld));\r\n                return !!(itemKey != null && itemKey.toString() === key);\r\n            });\r\n        }\r\n\r\n        protected getLookupItems(lookup: Q.Lookup<TItem>): TItem[] {\r\n            return this.filterItems(this.cascadeItems(lookup.items));\r\n        }\r\n\r\n        protected getTreeItems() {\r\n            var lookup = Q.getLookup<TItem>(this.options.lookupKey);\r\n            var items = this.getLookupItems(lookup);\r\n            return items.map(item => <Serenity.CheckTreeItem<TItem>>{\r\n                id: Q.coalesce(item[lookup.idField], \"\").toString(),\r\n                text: Q.coalesce(item[lookup.textField], \"\").toString(),\r\n                source: item\r\n            });\r\n        }\r\n\r\n        protected onViewFilter(item: CheckTreeItem<TItem>) {\r\n            return super.onViewFilter(item) &&\r\n                (Q.isEmptyOrNull(this.searchText) ||\r\n                    Select2.util.stripDiacritics(item.text || '')\r\n                        .toUpperCase().indexOf(this.searchText) >= 0);\r\n        }\r\n\r\n        protected moveSelectedUp(): boolean {\r\n            return this.options.checkedOnTop;\r\n        }\r\n\r\n        protected get_cascadeFrom(): string {\r\n            return this.options.cascadeFrom;\r\n        }\r\n\r\n        get cascadeFrom(): string {\r\n            return this.get_cascadeFrom();\r\n        }\r\n\r\n        protected getCascadeFromValue(parent: Serenity.Widget<any>) {\r\n            return Serenity.EditorUtils.getValue(parent);\r\n        }\r\n\r\n        protected cascadeLink: Serenity.CascadedWidgetLink<Widget<any>>;\r\n\r\n        protected setCascadeFrom(value: string) {\r\n\r\n            if (Q.isEmptyOrNull(value)) {\r\n                if (this.cascadeLink != null) {\r\n                    this.cascadeLink.set_parentID(null);\r\n                    this.cascadeLink = null;\r\n                }\r\n                this.options.cascadeFrom = null;\r\n                return;\r\n            }\r\n\r\n            this.cascadeLink = new Serenity.CascadedWidgetLink<Widget<any>>(Widget, this, p => {\r\n                this.set_cascadeValue(this.getCascadeFromValue(p));\r\n            });\r\n\r\n            this.cascadeLink.set_parentID(value);\r\n            this.options.cascadeFrom = value;\r\n        }\r\n\r\n        protected set_cascadeFrom(value: string) {\r\n            if (value !== this.options.cascadeFrom) {\r\n                this.setCascadeFrom(value);\r\n                this.updateItems();\r\n            }\r\n        }\r\n\r\n        set cascadeFrom(value: string) {\r\n            this.set_cascadeFrom(value);\r\n        }\r\n\r\n        protected get_cascadeField() {\r\n            return Q.coalesce(this.options.cascadeField, this.options.cascadeFrom);\r\n        }\r\n\r\n        get cascadeField(): string {\r\n            return this.get_cascadeField();\r\n        }\r\n\r\n        protected set_cascadeField(value: string) {\r\n            this.options.cascadeField = value;\r\n        }\r\n\r\n        set cascadeField(value: string) {\r\n            this.set_cascadeField(value);\r\n        }\r\n\r\n        protected get_cascadeValue(): any {\r\n            return this.options.cascadeValue;\r\n        }\r\n\r\n        get cascadeValue(): any {\r\n            return this.get_cascadeValue();\r\n        }\r\n\r\n        protected set_cascadeValue(value: any) {\r\n            if (this.options.cascadeValue !== value) {\r\n                this.options.cascadeValue = value;\r\n                this.value = [];\r\n                this.updateItems();\r\n            }\r\n        }\r\n\r\n        set cascadeValue(value: any) {\r\n            this.set_cascadeValue(value);\r\n        }\r\n\r\n        protected get_filterField() {\r\n            return this.options.filterField;\r\n        }\r\n\r\n        get filterField(): string {\r\n            return this.get_filterField();\r\n        }\r\n\r\n        protected set_filterField(value: string) {\r\n            this.options.filterField = value;\r\n        }\r\n\r\n        set filterField(value: string) {\r\n            this.set_filterField(value);\r\n        }\r\n\r\n        protected get_filterValue(): any {\r\n            return this.options.filterValue;\r\n        }\r\n\r\n        get filterValue(): any {\r\n            return this.get_filterValue();\r\n        }\r\n\r\n        protected set_filterValue(value: any) {\r\n            if (this.options.filterValue !== value) {\r\n                this.options.filterValue = value;\r\n                this.value = null;\r\n                this.updateItems();\r\n            }\r\n        }\r\n\r\n        set filterValue(value: any) {\r\n            this.set_filterValue(value);\r\n        }\r\n    }\r\n}"]}