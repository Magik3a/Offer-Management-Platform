@model OMP.Offers.Offers.OfferReportData
@using System.Globalization
@using System.Linq;

@if ((bool?)ViewData["Printing"] == true)
{
    Layout = MVC.Views.Shared._LayoutNoNavigation;
}

@{
    ViewData["Title"] = Serenity.LocalText.Get("Db.Offers.Offers.EntityPlural");

    var data = (Dictionary<string, object>)ViewData["AdditionalData"];
    var culture = new System.Globalization.CultureInfo(data["LanguageId"].ToString());
}


<style>
    .invoice .hr-category {
        width: 14cm;
        margin-left: 23px;
    }

    .invoice ul {
        margin: 0 0 5px 0;
    }

    .invoice .category-name {
        font-style: italic;
        text-decoration: underline;
        font-weight: 900 !important;
    }


    .invoice .hr-category hr {
        margin: 0 0 30px 0;
    }

    .offer-prices-info {
        margin-top: 100px;
    }

        .offer-prices-info .offer-total-prices {
            width: 45%;
            display: inline-block;
            margin-right: 9%;
        }

        .offer-prices-info .offer-category-info td {
            font-style: italic;
            color: #0094ff !important;
            text-align: right;
            /*text-shadow: 3px 2px 2px #8ad0ff !important;*/
        }

            .offer-prices-info .offer-category-info td:nth-child(1) {
            }

            .offer-prices-info .offer-category-info td:nth-child(2) {
                width: 5%;
            }

            .offer-prices-info .offer-category-info td:nth-child(3) {
                width: 20%;
            }

        .offer-prices-info .offer-category-info table {
            width: 100%
        }

        .offer-prices-info .offer-total-prices div:first-child {
            font-size: 11pt;
            background-color: #0094ff !important;
            text-align: center;
            padding: 5px;
            box-shadow: inset 0 0 10px white !important;
            margin-bottom: 5px;
            color: white !important;
        }

        .offer-prices-info .offer-total-prices div:last-child {
            padding: 5px;
            border: 2px groove #0094ff;
        }

        .offer-prices-info .offer-info {
            display: inline-block;
            width: 45%;
            position: fixed;
            font-style: italic;
            bottom: 0;
        }
</style>

<section class="invoice">
    @foreach (var category in Model.OfferCategories)
    {
        <ul>
            <li style="color: @category.CategoryFontColorReport !important;">
                <span style="color: @category.CategoryFontColorReport !important;" class="category-name">
                    @category.CategoryNameReport
                </span>

                <ul>
                    @foreach (var task in Model.OfferCategoryTasks
                      .Where(octs => octs.OfferCategoryId == category.OfferCategoryId && octs.ParentOfferCategoryTaskId == null))
                    {

                        <li>
                            @task.Name

                            @foreach (var taskLevelTwo in Model.OfferCategoryTasks
                              .Where(octs => octs.ParentOfferCategoryTaskId != null &&
                                             octs.ParentOfferCategoryTaskId == task.OfferCategoryTaskId
                              ))
                            {
                                <ul>
                                    <li>
                                        @taskLevelTwo.Name

                                        <ul>
                                            @foreach (var taskLevelThree in Model.OfferCategoryTasks
                                              .Where(octs => octs.ParentOfferCategoryTaskId != null &&
                                                             octs.ParentOfferCategoryTaskId == taskLevelTwo.OfferCategoryTaskId
                                              ))
                                            {
                                                <li>
                                                    @taskLevelThree.Name

                                                    <ul>
                                                        @foreach (var taskLevelFour in Model.OfferCategoryTasks
                                                          .Where(octs => octs.ParentOfferCategoryTaskId != null &&
                                                                         octs.ParentOfferCategoryTaskId == taskLevelThree.OfferCategoryTaskId
                                                          ))
                                                        {
                                                            <li>
                                                                @taskLevelFour.Name

                                                            </li>

                                                        }
                                                    </ul>
                                                </li>

                                            }
                                        </ul>
                                    </li>
                                </ul>
                            }
                        </li>
                    }
                </ul>
            </li>
        </ul>

        <div class="hr-category">
            <hr style="        border: 1px solid @category.CategoryFontColorReport !important;
        box-shadow: 1px 1px 4px @category.CategoryFontColorReport !important ;
" />
        </div>

    }


    <div class="offer-prices-info">
        <div class="offer-total-prices">
            <div>
                @Model.OfferReportTotalPriceString
            </div>
            <div class="offer-category-info">
                @{
                    var totalPrice = Decimal.Zero;
                }
                <table>
                    
                    @foreach (var category in Model.OfferCategories)
                    {
                        <tr>
                            <td>
                                @category.CategoryNameReport
                            </td>
                            <td>
                                -
                            </td>
                            <td>
                                @category.Price?.ToString("#,##0.00", culture)
                            </td>
                        </tr>

                        if (category.Price.HasValue)
                        {
                            totalPrice += category.Price.Value;
                        }

                    }
                    @if (Model.Offer.Discount.HasValue && Model.Offer.Discount.Value > 0)
                    {
                        <tr>
                            
                            @{
                                var discountPrice = Decimal.Zero ;
                                if (totalPrice > Model.Offer.Discount.Value)
                                {
                                    discountPrice = totalPrice - (totalPrice - Model.Offer.Discount.Value);
                                    totalPrice = totalPrice - Model.Offer.Discount.Value;
                                }
                            }

                            <td> @Model.OfferReportDiscountString</td>
                            <td>-</td>
                            <td>@discountPrice.ToString("#,##0.00", culture)</td>
                        </tr>
                    }

                    <tr>
                        <td>
                            @Model.OfferReportTotalPriceString
                        </td>
                        <td>
                            -
                        </td>
                        <td>
                            @totalPrice.ToString("#,##0.00", culture)
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="offer-info">
            <div>
                @Model.Offer.AdditionalInfo
            </div>
        </div>
    </div>
</section>